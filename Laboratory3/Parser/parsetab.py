
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ARR_CALL ASSIGN BACK BOOL_ARR BOOL_VAR COLON DECR EQ FALSE FORWARD GOTO INCR INT INT_ARR INT_VAR LABEL LBRACE LBRACKET LEFT LINK LINK_BREAK LPAREN NL NOR PASS PROC_ARR PROC_VAR RBRACE RBRACKET RIGHT RPAREN TP TRUE VAR_CALLprogram : statement_block NL\n                   | statement_block\n        program : error NL\n                   | error\n                   | statement_block error\n                   | statement_block error NL\n        statement_block : statement_block statement\n                           | statement\n        statement_block : error\n        statement : declaration NL\n                     | assignment NL\n                     | arithmetic NL\n                     | logics NL\n                     | comparison NL\n                     | cycle NL\n                     | conditionals NL\n                     | pass NL\n                     | identification NL\n                     | robot NL\n                     | empty\n                     | LPAREN statement RPAREN NL\n        statement : error\n                     | LPAREN error RPAREN NL\n        variable : INT_VARvariable : BOOL_VARvariable : int_arr_var\n                    | bool_arr_var\n        procedure : PROC_VARprocedure : proc_arr_varlabel : LABELliteral : LPAREN INT RPAREN\n                   | INT\n                   | TRUE\n                   | FALSE\n        var_call_id : VAR_CALLarr_call_id : ARR_CALL LBRACKET id_list RBRACKETcall : arr_call_id\n                | var_call_id\n        int_arr_var : INT_ARR LBRACKET id_list RBRACKETbool_arr_var : BOOL_ARR LBRACKET id_list RBRACKETproc_arr_var : PROC_ARR LBRACKET id_list RBRACKETid_list : id_list id\n                   | id\n        id : INTid : calldeclaration : label\n                       | declaration_set\n        declaration : errordeclaration_set : variable\n                           | procedure\n        assignment : declaration ASSIGN literal\n                      | declaration ASSIGN call\n\n                      | call ASSIGN call\n                      | call ASSIGN literal\n\n                      | declaration ASSIGN arithmetic\n                      | declaration ASSIGN logics\n                      | declaration ASSIGN comparison\n                      | declaration ASSIGN identification\n                      | declaration ASSIGN robot\n\n                      | call ASSIGN arithmetic\n                      | call ASSIGN logics\n                      | call ASSIGN comparison\n                      | call ASSIGN identification\n                      | call ASSIGN robot\n\n                      | call ASSIGN LBRACE NL statement_block RBRACE\n        assignment : error ASSIGN call\n                      | error ASSIGN literal\n                      | declaration ASSIGN error\n\n                      | call ASSIGN error\n\n                      | error ASSIGN arithmetic\n                      | error ASSIGN logics\n                      | error ASSIGN comparison\n                      | error ASSIGN identification\n                      | error ASSIGN robot\n\n                      | error ASSIGN LBRACE statement_block RBRACE\n                      | call ASSIGN LBRACE error RBRACE\n        arithmetic : INCR\n                      | DECR\n        arithmetic : errorlog_type : TRUE\n                    | FALSE\n                    | call\n        logic_expr : logic_expr COLON log_type\n                      | log_type\n        logics : NOR logic_expr\n        logics : NOR errorcomparison : arithmetic EQ INT\n                      | logics EQ TRUE\n                      | logics EQ FALSE\n                      | logic_expr EQ TRUE\n                      | logic_expr EQ FALSE\n                      | call EQ PASS\n                      | call EQ literal\n        comparison : error EQ INT\n                      | error EQ TRUE\n                      | error EQ FALSE\n                      | error EQ PASS\n\n                      | arithmetic EQ error\n                      | logics EQ error\n                      | logic_expr EQ error\n                      | call EQ error\n\n                      | arithmetic EQ error conditionals\n                      | logics EQ error conditionals\n        cycle : LPAREN logics RPAREN LBRACE NL statement_block RBRACE\n                 | LPAREN logic_expr RPAREN LBRACE NL statement_block RBRACE\n        cycle : LPAREN error RPAREN LBRACE NL statement_block RBRACE\n                 | LPAREN logics RPAREN LBRACE NL error RBRACE\n                 | LPAREN logic_expr RPAREN LBRACE NL error RBRACE\n        conditionals : LBRACKET logics RBRACKET GOTO var_call_id\n                        | LBRACKET logic_expr RBRACKET GOTO var_call_id\n                        | LBRACKET logics RBRACKET var_call_id\n                        | LBRACKET logic_expr RBRACKET var_call_id\n                        | GOTO var_call_id\n                        | var_call_id\n        conditionals : LBRACKET error RBRACKET GOTO var_call_id\n                        | LBRACKET error RBRACKET var_call_id\n\n                        | LBRACKET logics RBRACKET GOTO error\n                        | LBRACKET logic_expr RBRACKET GOTO error\n                        | LBRACKET logics RBRACKET error\n                        | LBRACKET logic_expr RBRACKET error\n\n                        | GOTO error\n                        | error\n        pass : PASSidentification : declaration LINK var_call_id\n                          | call LINK var_call_id\n                          | declaration LINK_BREAK var_call_id\n                          | call LINK_BREAK var_call_id\n        identification : error LINK var_call_id\n                          | error LINK_BREAK var_call_id\n\n                          | declaration LINK error\n                          | call LINK error\n                          | declaration LINK_BREAK error\n                          | call LINK_BREAK error\n\n                          | identification error\n                          | literal LINK var_call_id\n                          | literal LINK_BREAK var_call_id\n        robot : FORWARD\n                 | BACK\n                 | RIGHT\n                 | LEFT\n                 | TP\n        empty : NL'
    
_lr_action_items = {'error':([0,2,3,4,5,14,16,17,24,30,31,43,54,55,56,58,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,87,88,89,90,97,115,117,124,125,131,134,135,136,137,139,142,148,149,155,157,164,165,166,167,172,173,182,183,189,190,194,196,199,209,211,212,213,214,221,222,223,224,225,],[4,55,-142,-9,-8,76,-20,79,92,101,103,-35,-142,-22,-7,109,-10,133,135,137,-11,-12,139,-13,142,-14,-15,-16,-17,-18,-134,-19,158,161,165,167,170,76,182,-128,-129,76,-124,-130,-126,-132,185,185,-135,-136,76,195,-125,-131,-127,-133,198,201,-9,209,-21,-23,182,217,219,-22,182,223,225,209,209,209,-9,209,-9,]),'LPAREN':([0,2,3,4,5,16,17,54,55,56,58,62,63,66,67,69,71,72,73,74,75,77,87,88,117,182,183,189,190,194,209,211,212,213,214,221,222,223,224,225,],[17,17,-142,-9,-8,-20,17,-142,-22,-7,118,-10,118,-11,-12,-13,-14,-15,-16,-17,-18,-19,118,118,17,-9,17,-21,-23,17,-22,17,17,17,17,17,17,-9,17,-9,]),'INCR':([0,2,3,4,5,16,17,54,55,56,58,62,63,66,67,69,71,72,73,74,75,77,87,117,182,183,189,190,194,209,211,212,213,214,221,222,223,224,225,],[22,22,-142,-9,-8,-20,22,-142,-22,-7,22,-10,22,-11,-12,-13,-14,-15,-16,-17,-18,-19,22,22,-9,22,-21,-23,22,-22,22,22,22,22,22,22,-9,22,-9,]),'DECR':([0,2,3,4,5,16,17,54,55,56,58,62,63,66,67,69,71,72,73,74,75,77,87,117,182,183,189,190,194,209,211,212,213,214,221,222,223,224,225,],[23,23,-142,-9,-8,-20,23,-142,-22,-7,23,-10,23,-11,-12,-13,-14,-15,-16,-17,-18,-19,23,23,-9,23,-21,-23,23,-22,23,23,23,23,23,23,-9,23,-9,]),'NOR':([0,2,3,4,5,16,17,30,54,55,56,58,62,63,66,67,69,71,72,73,74,75,77,87,117,182,183,189,190,194,209,211,212,213,214,221,222,223,224,225,],[24,24,-142,-9,-8,-20,24,24,-142,-22,-7,24,-10,24,-11,-12,-13,-14,-15,-16,-17,-18,-19,24,24,-9,24,-21,-23,24,-22,24,24,24,24,24,24,-9,24,-9,]),'LBRACKET':([0,2,3,4,5,16,17,50,51,52,53,54,55,56,62,66,67,69,71,72,73,74,75,77,117,139,142,182,183,189,190,194,209,211,212,213,214,221,222,223,224,225,],[30,30,-142,-9,-8,-20,30,104,105,106,107,-142,-22,-7,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,30,30,30,-9,30,-21,-23,30,-22,30,30,30,30,30,30,-9,30,-9,]),'GOTO':([0,2,3,4,5,16,17,54,55,56,62,66,67,69,71,72,73,74,75,77,117,139,142,172,173,174,182,183,189,190,194,209,211,212,213,214,221,222,223,224,225,],[31,31,-142,-9,-8,-20,31,-142,-22,-7,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,31,31,31,196,199,202,-9,31,-21,-23,31,-22,31,31,31,31,31,31,-9,31,-9,]),'PASS':([0,2,3,4,5,16,17,54,55,56,59,62,66,67,69,71,72,73,74,75,77,88,117,182,183,189,190,194,209,211,212,213,214,221,222,223,224,225,],[29,29,-142,-9,-8,-20,29,-142,-22,-7,123,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,159,29,-9,29,-21,-23,29,-22,29,29,29,29,29,29,-9,29,-9,]),'FORWARD':([0,2,3,4,5,16,17,54,55,56,58,62,63,66,67,69,71,72,73,74,75,77,87,117,182,183,189,190,194,209,211,212,213,214,221,222,223,224,225,],[33,33,-142,-9,-8,-20,33,-142,-22,-7,33,-10,33,-11,-12,-13,-14,-15,-16,-17,-18,-19,33,33,-9,33,-21,-23,33,-22,33,33,33,33,33,33,-9,33,-9,]),'BACK':([0,2,3,4,5,16,17,54,55,56,58,62,63,66,67,69,71,72,73,74,75,77,87,117,182,183,189,190,194,209,211,212,213,214,221,222,223,224,225,],[34,34,-142,-9,-8,-20,34,-142,-22,-7,34,-10,34,-11,-12,-13,-14,-15,-16,-17,-18,-19,34,34,-9,34,-21,-23,34,-22,34,34,34,34,34,34,-9,34,-9,]),'RIGHT':([0,2,3,4,5,16,17,54,55,56,58,62,63,66,67,69,71,72,73,74,75,77,87,117,182,183,189,190,194,209,211,212,213,214,221,222,223,224,225,],[35,35,-142,-9,-8,-20,35,-142,-22,-7,35,-10,35,-11,-12,-13,-14,-15,-16,-17,-18,-19,35,35,-9,35,-21,-23,35,-22,35,35,35,35,35,35,-9,35,-9,]),'LEFT':([0,2,3,4,5,16,17,54,55,56,58,62,63,66,67,69,71,72,73,74,75,77,87,117,182,183,189,190,194,209,211,212,213,214,221,222,223,224,225,],[36,36,-142,-9,-8,-20,36,-142,-22,-7,36,-10,36,-11,-12,-13,-14,-15,-16,-17,-18,-19,36,36,-9,36,-21,-23,36,-22,36,36,36,36,36,36,-9,36,-9,]),'TP':([0,2,3,4,5,16,17,54,55,56,58,62,63,66,67,69,71,72,73,74,75,77,87,117,182,183,189,190,194,209,211,212,213,214,221,222,223,224,225,],[37,37,-142,-9,-8,-20,37,-142,-22,-7,37,-10,37,-11,-12,-13,-14,-15,-16,-17,-18,-19,37,37,-9,37,-21,-23,37,-22,37,37,37,37,37,37,-9,37,-9,]),'NL':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,22,23,26,27,28,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,54,55,56,62,66,67,69,71,72,73,74,75,76,77,79,80,91,92,93,94,95,96,102,103,109,110,111,112,113,114,115,116,117,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,182,183,185,186,187,188,189,190,191,192,193,194,197,198,200,201,203,204,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,],[3,54,-142,57,-8,62,66,67,69,71,72,73,74,75,77,-20,3,-46,-47,-77,-78,-32,-33,-34,-123,-114,-137,-138,-139,-140,-141,-30,-49,-50,-37,-84,-35,-24,-25,-26,-27,-28,-29,-142,108,-7,-10,-11,-12,-13,-14,-15,-16,-17,-18,-134,-19,-48,69,-85,-86,-80,-81,-82,-38,-113,-121,-79,-66,-67,-70,-71,-72,-73,-74,3,-94,-95,-96,-97,-128,-129,-51,-52,-55,-56,-57,-58,-59,-68,-124,-130,-126,-132,-87,-98,-88,-89,-99,189,190,-31,-135,-136,-53,-54,-60,-61,-62,-63,-64,194,-69,-92,-93,-101,-33,-34,-125,-131,-127,-133,-90,-91,-100,-83,-9,3,-122,-102,-114,-103,-21,-23,211,212,213,3,-111,-119,-112,-120,-116,-36,-39,-40,-41,-22,-75,3,3,3,3,-76,-109,-117,-110,-118,-115,3,3,-9,3,-9,-65,-106,-104,-107,-105,-108,]),'LABEL':([0,2,3,4,5,16,17,54,55,56,58,62,63,66,67,69,71,72,73,74,75,77,87,117,182,183,189,190,194,209,211,212,213,214,221,222,223,224,225,],[38,38,-142,-9,-8,-20,38,-142,-22,-7,38,-10,38,-11,-12,-13,-14,-15,-16,-17,-18,-19,38,38,-9,38,-21,-23,38,-22,38,38,38,38,38,38,-9,38,-9,]),'VAR_CALL':([0,2,3,4,5,16,17,24,30,31,41,43,54,55,56,58,60,61,62,63,64,65,66,67,69,71,72,73,74,75,77,85,86,87,89,90,96,98,104,105,106,107,117,139,142,172,173,174,175,176,177,178,179,180,181,182,183,189,190,194,196,199,202,204,205,209,211,212,213,214,221,222,223,224,225,],[43,43,-142,-9,-8,-20,43,43,43,43,-37,-35,-142,-22,-7,43,43,43,-10,43,43,43,-11,-12,-13,-14,-15,-16,-17,-18,-19,43,43,43,43,43,-38,43,43,43,43,43,43,43,43,43,43,43,43,-43,-44,-45,43,43,43,-9,43,-21,-23,43,43,43,43,-36,-42,-22,43,43,43,43,43,43,-9,43,-9,]),'INT':([0,2,3,4,5,16,17,41,43,54,55,56,58,59,62,63,66,67,68,69,71,72,73,74,75,77,87,88,96,104,105,106,107,117,118,175,176,177,178,179,180,181,182,183,189,190,194,204,205,209,211,212,213,214,221,222,223,224,225,],[26,26,-142,-9,-8,-20,82,-37,-35,-142,-22,-7,26,120,-10,26,-11,-12,138,-13,-14,-15,-16,-17,-18,-19,26,26,-38,177,177,177,177,26,184,177,-43,-44,-45,177,177,177,-9,26,-21,-23,26,-36,-42,-22,26,26,26,26,26,26,-9,26,-9,]),'TRUE':([0,2,3,4,5,16,17,24,30,54,55,56,58,59,62,63,66,67,69,70,71,72,73,74,75,77,87,88,97,98,117,182,183,189,190,194,209,211,212,213,214,221,222,223,224,225,],[27,27,-142,-9,-8,-20,83,93,93,-142,-22,-7,27,121,-10,27,-11,-12,-13,140,-14,-15,-16,-17,-18,-19,27,162,168,93,27,-9,27,-21,-23,27,-22,27,27,27,27,27,27,-9,27,-9,]),'FALSE':([0,2,3,4,5,16,17,24,30,54,55,56,58,59,62,63,66,67,69,70,71,72,73,74,75,77,87,88,97,98,117,182,183,189,190,194,209,211,212,213,214,221,222,223,224,225,],[28,28,-142,-9,-8,-20,84,94,94,-142,-22,-7,28,122,-10,28,-11,-12,-13,141,-14,-15,-16,-17,-18,-19,28,163,169,94,28,-9,28,-21,-23,28,-22,28,28,28,28,28,28,-9,28,-9,]),'INT_VAR':([0,2,3,4,5,16,17,54,55,56,58,62,63,66,67,69,71,72,73,74,75,77,87,117,182,183,189,190,194,209,211,212,213,214,221,222,223,224,225,],[44,44,-142,-9,-8,-20,44,-142,-22,-7,44,-10,44,-11,-12,-13,-14,-15,-16,-17,-18,-19,44,44,-9,44,-21,-23,44,-22,44,44,44,44,44,44,-9,44,-9,]),'BOOL_VAR':([0,2,3,4,5,16,17,54,55,56,58,62,63,66,67,69,71,72,73,74,75,77,87,117,182,183,189,190,194,209,211,212,213,214,221,222,223,224,225,],[45,45,-142,-9,-8,-20,45,-142,-22,-7,45,-10,45,-11,-12,-13,-14,-15,-16,-17,-18,-19,45,45,-9,45,-21,-23,45,-22,45,45,45,45,45,45,-9,45,-9,]),'PROC_VAR':([0,2,3,4,5,16,17,54,55,56,58,62,63,66,67,69,71,72,73,74,75,77,87,117,182,183,189,190,194,209,211,212,213,214,221,222,223,224,225,],[48,48,-142,-9,-8,-20,48,-142,-22,-7,48,-10,48,-11,-12,-13,-14,-15,-16,-17,-18,-19,48,48,-9,48,-21,-23,48,-22,48,48,48,48,48,48,-9,48,-9,]),'ARR_CALL':([0,2,3,4,5,16,17,24,30,41,43,54,55,56,58,62,63,66,67,69,71,72,73,74,75,77,87,96,98,104,105,106,107,117,175,176,177,178,179,180,181,182,183,189,190,194,204,205,209,211,212,213,214,221,222,223,224,225,],[50,50,-142,-9,-8,-20,50,50,50,-37,-35,-142,-22,-7,50,-10,50,-11,-12,-13,-14,-15,-16,-17,-18,-19,50,-38,50,50,50,50,50,50,50,-43,-44,-45,50,50,50,-9,50,-21,-23,50,-36,-42,-22,50,50,50,50,50,50,-9,50,-9,]),'INT_ARR':([0,2,3,4,5,16,17,54,55,56,58,62,63,66,67,69,71,72,73,74,75,77,87,117,182,183,189,190,194,209,211,212,213,214,221,222,223,224,225,],[51,51,-142,-9,-8,-20,51,-142,-22,-7,51,-10,51,-11,-12,-13,-14,-15,-16,-17,-18,-19,51,51,-9,51,-21,-23,51,-22,51,51,51,51,51,51,-9,51,-9,]),'BOOL_ARR':([0,2,3,4,5,16,17,54,55,56,58,62,63,66,67,69,71,72,73,74,75,77,87,117,182,183,189,190,194,209,211,212,213,214,221,222,223,224,225,],[52,52,-142,-9,-8,-20,52,-142,-22,-7,52,-10,52,-11,-12,-13,-14,-15,-16,-17,-18,-19,52,52,-9,52,-21,-23,52,-22,52,52,52,52,52,52,-9,52,-9,]),'PROC_ARR':([0,2,3,4,5,16,17,54,55,56,58,62,63,66,67,69,71,72,73,74,75,77,87,117,182,183,189,190,194,209,211,212,213,214,221,222,223,224,225,],[53,53,-142,-9,-8,-20,53,-142,-22,-7,53,-10,53,-11,-12,-13,-14,-15,-16,-17,-18,-19,53,53,-9,53,-21,-23,53,-22,53,53,53,53,53,53,-9,53,-9,]),'$end':([1,2,3,4,5,16,54,55,56,57,62,66,67,69,71,72,73,74,75,77,108,189,190,],[0,-2,-142,-4,-8,-20,-1,-5,-7,-3,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-6,-21,-23,]),'RPAREN':([3,16,21,32,41,42,43,62,66,67,69,71,72,73,74,75,77,78,79,80,81,82,83,84,91,92,93,94,95,96,171,184,189,190,204,],[-142,-20,-82,-38,-37,-84,-35,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,143,144,145,146,147,-80,-81,-85,-86,-80,-81,-82,-38,-83,147,-21,-23,-36,]),'RBRACE':([3,5,16,56,62,66,67,69,71,72,73,74,75,77,182,183,189,190,195,209,214,221,222,223,224,225,],[-142,-8,-20,-7,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-9,210,-21,-23,215,-22,226,227,228,229,230,231,]),'ASSIGN':([4,6,18,19,21,32,38,39,40,41,43,44,45,46,47,48,49,55,79,182,204,206,207,208,209,223,225,],[58,63,-46,-47,87,-38,-30,-49,-50,-37,-35,-24,-25,-26,-27,-28,-29,58,58,58,-36,-39,-40,-41,58,58,58,]),'LINK':([4,6,18,19,20,21,26,27,28,32,38,39,40,41,43,44,45,46,47,48,49,55,79,82,83,84,96,109,110,111,119,126,127,133,147,150,151,158,182,204,206,207,208,209,223,225,],[60,64,-46,-47,85,89,-32,-33,-34,-38,-30,-49,-50,-37,-35,-24,-25,-26,-27,-28,-29,60,60,-32,-33,-34,-38,60,89,85,64,85,89,60,-31,89,85,60,60,-36,-39,-40,-41,60,60,60,]),'LINK_BREAK':([4,6,18,19,20,21,26,27,28,32,38,39,40,41,43,44,45,46,47,48,49,55,79,82,83,84,96,109,110,111,119,126,127,133,147,150,151,158,182,204,206,207,208,209,223,225,],[61,65,-46,-47,86,90,-32,-33,-34,-38,-30,-49,-50,-37,-35,-24,-25,-26,-27,-28,-29,61,61,-32,-33,-34,-38,61,90,86,65,86,90,61,-31,90,86,61,61,-36,-39,-40,-41,61,61,61,]),'EQ':([4,8,9,21,22,23,25,27,28,32,41,42,43,55,79,80,81,83,84,91,92,93,94,95,96,109,110,112,113,127,128,129,133,150,152,153,158,171,182,204,209,223,225,],[59,68,70,88,-77,-78,97,-80,-81,-38,-37,-84,-35,59,59,70,97,-80,-81,-85,-86,-80,-81,-82,-38,59,88,68,70,88,68,70,59,88,68,70,59,-83,59,-36,59,59,59,]),'COLON':([21,25,27,28,32,41,42,43,81,83,84,91,93,94,95,96,100,110,127,150,171,204,],[-82,98,-80,-81,-38,-37,-84,-35,98,-80,-81,98,-80,-81,-82,-38,98,-82,-82,-82,-83,-36,]),'RBRACKET':([41,42,43,91,92,93,94,95,96,99,100,101,171,175,176,177,178,179,180,181,204,205,],[-37,-84,-35,-85,-86,-80,-81,-82,-38,172,173,174,-83,204,-43,-44,-45,206,207,208,-36,-42,]),'LBRACE':([58,87,144,145,146,],[117,157,191,192,193,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_block':([0,117,194,211,212,213,],[2,183,214,221,222,224,]),'statement':([0,2,17,117,183,194,211,212,213,214,221,222,224,],[5,56,78,5,56,5,5,5,5,56,56,56,56,]),'declaration':([0,2,17,58,63,87,117,183,194,211,212,213,214,221,222,224,],[6,6,6,119,119,119,6,6,6,6,6,6,6,6,6,6,]),'assignment':([0,2,17,117,183,194,211,212,213,214,221,222,224,],[7,7,7,7,7,7,7,7,7,7,7,7,7,]),'arithmetic':([0,2,17,58,63,87,117,183,194,211,212,213,214,221,222,224,],[8,8,8,112,128,152,8,8,8,8,8,8,8,8,8,8,]),'logics':([0,2,17,30,58,63,87,117,183,194,211,212,213,214,221,222,224,],[9,9,80,99,113,129,153,9,9,9,9,9,9,9,9,9,9,]),'comparison':([0,2,17,58,63,87,117,183,194,211,212,213,214,221,222,224,],[10,10,10,114,130,154,10,10,10,10,10,10,10,10,10,10,]),'cycle':([0,2,17,117,183,194,211,212,213,214,221,222,224,],[11,11,11,11,11,11,11,11,11,11,11,11,11,]),'conditionals':([0,2,17,117,139,142,183,194,211,212,213,214,221,222,224,],[12,12,12,12,186,188,12,12,12,12,12,12,12,12,12,]),'pass':([0,2,17,117,183,194,211,212,213,214,221,222,224,],[13,13,13,13,13,13,13,13,13,13,13,13,13,]),'identification':([0,2,17,58,63,87,117,183,194,211,212,213,214,221,222,224,],[14,14,14,115,131,155,14,14,14,14,14,14,14,14,14,14,]),'robot':([0,2,17,58,63,87,117,183,194,211,212,213,214,221,222,224,],[15,15,15,116,132,156,15,15,15,15,15,15,15,15,15,15,]),'empty':([0,2,17,117,183,194,211,212,213,214,221,222,224,],[16,16,16,16,16,16,16,16,16,16,16,16,16,]),'label':([0,2,17,58,63,87,117,183,194,211,212,213,214,221,222,224,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'declaration_set':([0,2,17,58,63,87,117,183,194,211,212,213,214,221,222,224,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'literal':([0,2,17,58,63,87,88,117,183,194,211,212,213,214,221,222,224,],[20,20,20,111,126,151,160,20,20,20,20,20,20,20,20,20,20,]),'call':([0,2,17,24,30,58,63,87,98,104,105,106,107,117,175,179,180,181,183,194,211,212,213,214,221,222,224,],[21,21,21,95,95,110,127,150,95,178,178,178,178,21,178,178,178,178,21,21,21,21,21,21,21,21,21,]),'logic_expr':([0,2,17,24,30,58,63,87,117,183,194,211,212,213,214,221,222,224,],[25,25,81,91,100,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'var_call_id':([0,2,17,24,30,31,58,60,61,63,64,65,85,86,87,89,90,98,104,105,106,107,117,139,142,172,173,174,175,179,180,181,183,194,196,199,202,211,212,213,214,221,222,224,],[32,32,32,96,96,102,96,124,125,96,134,136,148,149,96,164,166,96,96,96,96,96,32,187,187,197,200,203,96,96,96,96,32,32,216,218,220,32,32,32,32,32,32,32,]),'variable':([0,2,17,58,63,87,117,183,194,211,212,213,214,221,222,224,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'procedure':([0,2,17,58,63,87,117,183,194,211,212,213,214,221,222,224,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'arr_call_id':([0,2,17,24,30,58,63,87,98,104,105,106,107,117,175,179,180,181,183,194,211,212,213,214,221,222,224,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'log_type':([0,2,17,24,30,58,63,87,98,117,183,194,211,212,213,214,221,222,224,],[42,42,42,42,42,42,42,42,171,42,42,42,42,42,42,42,42,42,42,]),'int_arr_var':([0,2,17,58,63,87,117,183,194,211,212,213,214,221,222,224,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'bool_arr_var':([0,2,17,58,63,87,117,183,194,211,212,213,214,221,222,224,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'proc_arr_var':([0,2,17,58,63,87,117,183,194,211,212,213,214,221,222,224,],[49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'id_list':([104,105,106,107,],[175,179,180,181,]),'id':([104,105,106,107,175,179,180,181,],[176,176,176,176,205,205,205,205,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_block NL','program',2,'p_program','Parser.py',30),
  ('program -> statement_block','program',1,'p_program','Parser.py',31),
  ('program -> error NL','program',2,'p_program_error','Parser.py',36),
  ('program -> error','program',1,'p_program_error','Parser.py',37),
  ('program -> statement_block error','program',2,'p_program_error','Parser.py',38),
  ('program -> statement_block error NL','program',3,'p_program_error','Parser.py',39),
  ('statement_block -> statement_block statement','statement_block',2,'p_statement_block','Parser.py',46),
  ('statement_block -> statement','statement_block',1,'p_statement_block','Parser.py',47),
  ('statement_block -> error','statement_block',1,'p_statement_block_error','Parser.py',55),
  ('statement -> declaration NL','statement',2,'p_statement','Parser.py',62),
  ('statement -> assignment NL','statement',2,'p_statement','Parser.py',63),
  ('statement -> arithmetic NL','statement',2,'p_statement','Parser.py',64),
  ('statement -> logics NL','statement',2,'p_statement','Parser.py',65),
  ('statement -> comparison NL','statement',2,'p_statement','Parser.py',66),
  ('statement -> cycle NL','statement',2,'p_statement','Parser.py',67),
  ('statement -> conditionals NL','statement',2,'p_statement','Parser.py',68),
  ('statement -> pass NL','statement',2,'p_statement','Parser.py',69),
  ('statement -> identification NL','statement',2,'p_statement','Parser.py',70),
  ('statement -> robot NL','statement',2,'p_statement','Parser.py',71),
  ('statement -> empty','statement',1,'p_statement','Parser.py',72),
  ('statement -> LPAREN statement RPAREN NL','statement',4,'p_statement','Parser.py',73),
  ('statement -> error','statement',1,'p_statement_error','Parser.py',81),
  ('statement -> LPAREN error RPAREN NL','statement',4,'p_statement_error','Parser.py',82),
  ('variable -> INT_VAR','variable',1,'p_variable_int','Parser.py',95),
  ('variable -> BOOL_VAR','variable',1,'p_variable_bool','Parser.py',99),
  ('variable -> int_arr_var','variable',1,'p_variable','Parser.py',103),
  ('variable -> bool_arr_var','variable',1,'p_variable','Parser.py',104),
  ('procedure -> PROC_VAR','procedure',1,'p_procedure_simple','Parser.py',109),
  ('procedure -> proc_arr_var','procedure',1,'p_procedure','Parser.py',114),
  ('label -> LABEL','label',1,'p_label','Parser.py',119),
  ('literal -> LPAREN INT RPAREN','literal',3,'p_literal','Parser.py',123),
  ('literal -> INT','literal',1,'p_literal','Parser.py',124),
  ('literal -> TRUE','literal',1,'p_literal','Parser.py',125),
  ('literal -> FALSE','literal',1,'p_literal','Parser.py',126),
  ('var_call_id -> VAR_CALL','var_call_id',1,'p_var_call_id','Parser.py',134),
  ('arr_call_id -> ARR_CALL LBRACKET id_list RBRACKET','arr_call_id',4,'p_arr_call_id','Parser.py',139),
  ('call -> arr_call_id','call',1,'p_call','Parser.py',143),
  ('call -> var_call_id','call',1,'p_call','Parser.py',144),
  ('int_arr_var -> INT_ARR LBRACKET id_list RBRACKET','int_arr_var',4,'p_int_arr_var','Parser.py',150),
  ('bool_arr_var -> BOOL_ARR LBRACKET id_list RBRACKET','bool_arr_var',4,'p_bool_arr_var','Parser.py',154),
  ('proc_arr_var -> PROC_ARR LBRACKET id_list RBRACKET','proc_arr_var',4,'p_proc_arr_var','Parser.py',158),
  ('id_list -> id_list id','id_list',2,'p_id_list','Parser.py',162),
  ('id_list -> id','id_list',1,'p_id_list','Parser.py',163),
  ('id -> INT','id',1,'p_id_simple','Parser.py',172),
  ('id -> call','id',1,'p_id','Parser.py',176),
  ('declaration -> label','declaration',1,'p_declaration','Parser.py',182),
  ('declaration -> declaration_set','declaration',1,'p_declaration','Parser.py',183),
  ('declaration -> error','declaration',1,'p_declaration_error','Parser.py',188),
  ('declaration_set -> variable','declaration_set',1,'p_declaration_set','Parser.py',194),
  ('declaration_set -> procedure','declaration_set',1,'p_declaration_set','Parser.py',195),
  ('assignment -> declaration ASSIGN literal','assignment',3,'p_assignment','Parser.py',203),
  ('assignment -> declaration ASSIGN call','assignment',3,'p_assignment','Parser.py',204),
  ('assignment -> call ASSIGN call','assignment',3,'p_assignment','Parser.py',206),
  ('assignment -> call ASSIGN literal','assignment',3,'p_assignment','Parser.py',207),
  ('assignment -> declaration ASSIGN arithmetic','assignment',3,'p_assignment','Parser.py',209),
  ('assignment -> declaration ASSIGN logics','assignment',3,'p_assignment','Parser.py',210),
  ('assignment -> declaration ASSIGN comparison','assignment',3,'p_assignment','Parser.py',211),
  ('assignment -> declaration ASSIGN identification','assignment',3,'p_assignment','Parser.py',212),
  ('assignment -> declaration ASSIGN robot','assignment',3,'p_assignment','Parser.py',213),
  ('assignment -> call ASSIGN arithmetic','assignment',3,'p_assignment','Parser.py',215),
  ('assignment -> call ASSIGN logics','assignment',3,'p_assignment','Parser.py',216),
  ('assignment -> call ASSIGN comparison','assignment',3,'p_assignment','Parser.py',217),
  ('assignment -> call ASSIGN identification','assignment',3,'p_assignment','Parser.py',218),
  ('assignment -> call ASSIGN robot','assignment',3,'p_assignment','Parser.py',219),
  ('assignment -> call ASSIGN LBRACE NL statement_block RBRACE','assignment',6,'p_assignment','Parser.py',221),
  ('assignment -> error ASSIGN call','assignment',3,'p_assignment_error','Parser.py',229),
  ('assignment -> error ASSIGN literal','assignment',3,'p_assignment_error','Parser.py',230),
  ('assignment -> declaration ASSIGN error','assignment',3,'p_assignment_error','Parser.py',231),
  ('assignment -> call ASSIGN error','assignment',3,'p_assignment_error','Parser.py',233),
  ('assignment -> error ASSIGN arithmetic','assignment',3,'p_assignment_error','Parser.py',235),
  ('assignment -> error ASSIGN logics','assignment',3,'p_assignment_error','Parser.py',236),
  ('assignment -> error ASSIGN comparison','assignment',3,'p_assignment_error','Parser.py',237),
  ('assignment -> error ASSIGN identification','assignment',3,'p_assignment_error','Parser.py',238),
  ('assignment -> error ASSIGN robot','assignment',3,'p_assignment_error','Parser.py',239),
  ('assignment -> error ASSIGN LBRACE statement_block RBRACE','assignment',5,'p_assignment_error','Parser.py',241),
  ('assignment -> call ASSIGN LBRACE error RBRACE','assignment',5,'p_assignment_error','Parser.py',242),
  ('arithmetic -> INCR','arithmetic',1,'p_arithmetic','Parser.py',254),
  ('arithmetic -> DECR','arithmetic',1,'p_arithmetic','Parser.py',255),
  ('arithmetic -> error','arithmetic',1,'p_arithmetic_error','Parser.py',263),
  ('log_type -> TRUE','log_type',1,'p_log_type','Parser.py',271),
  ('log_type -> FALSE','log_type',1,'p_log_type','Parser.py',272),
  ('log_type -> call','log_type',1,'p_log_type','Parser.py',273),
  ('logic_expr -> logic_expr COLON log_type','logic_expr',3,'p_logic_expr','Parser.py',282),
  ('logic_expr -> log_type','logic_expr',1,'p_logic_expr','Parser.py',283),
  ('logics -> NOR logic_expr','logics',2,'p_logics','Parser.py',291),
  ('logics -> NOR error','logics',2,'p_logics_error','Parser.py',296),
  ('comparison -> arithmetic EQ INT','comparison',3,'p_comparison','Parser.py',304),
  ('comparison -> logics EQ TRUE','comparison',3,'p_comparison','Parser.py',305),
  ('comparison -> logics EQ FALSE','comparison',3,'p_comparison','Parser.py',306),
  ('comparison -> logic_expr EQ TRUE','comparison',3,'p_comparison','Parser.py',307),
  ('comparison -> logic_expr EQ FALSE','comparison',3,'p_comparison','Parser.py',308),
  ('comparison -> call EQ PASS','comparison',3,'p_comparison','Parser.py',309),
  ('comparison -> call EQ literal','comparison',3,'p_comparison','Parser.py',310),
  ('comparison -> error EQ INT','comparison',3,'p_comparison_error','Parser.py',315),
  ('comparison -> error EQ TRUE','comparison',3,'p_comparison_error','Parser.py',316),
  ('comparison -> error EQ FALSE','comparison',3,'p_comparison_error','Parser.py',317),
  ('comparison -> error EQ PASS','comparison',3,'p_comparison_error','Parser.py',318),
  ('comparison -> arithmetic EQ error','comparison',3,'p_comparison_error','Parser.py',320),
  ('comparison -> logics EQ error','comparison',3,'p_comparison_error','Parser.py',321),
  ('comparison -> logic_expr EQ error','comparison',3,'p_comparison_error','Parser.py',322),
  ('comparison -> call EQ error','comparison',3,'p_comparison_error','Parser.py',323),
  ('comparison -> arithmetic EQ error conditionals','comparison',4,'p_comparison_error','Parser.py',325),
  ('comparison -> logics EQ error conditionals','comparison',4,'p_comparison_error','Parser.py',326),
  ('cycle -> LPAREN logics RPAREN LBRACE NL statement_block RBRACE','cycle',7,'p_cycle','Parser.py',334),
  ('cycle -> LPAREN logic_expr RPAREN LBRACE NL statement_block RBRACE','cycle',7,'p_cycle','Parser.py',335),
  ('cycle -> LPAREN error RPAREN LBRACE NL statement_block RBRACE','cycle',7,'p_cycle_error','Parser.py',340),
  ('cycle -> LPAREN logics RPAREN LBRACE NL error RBRACE','cycle',7,'p_cycle_error','Parser.py',341),
  ('cycle -> LPAREN logic_expr RPAREN LBRACE NL error RBRACE','cycle',7,'p_cycle_error','Parser.py',342),
  ('conditionals -> LBRACKET logics RBRACKET GOTO var_call_id','conditionals',5,'p_conditionals','Parser.py',351),
  ('conditionals -> LBRACKET logic_expr RBRACKET GOTO var_call_id','conditionals',5,'p_conditionals','Parser.py',352),
  ('conditionals -> LBRACKET logics RBRACKET var_call_id','conditionals',4,'p_conditionals','Parser.py',353),
  ('conditionals -> LBRACKET logic_expr RBRACKET var_call_id','conditionals',4,'p_conditionals','Parser.py',354),
  ('conditionals -> GOTO var_call_id','conditionals',2,'p_conditionals','Parser.py',355),
  ('conditionals -> var_call_id','conditionals',1,'p_conditionals','Parser.py',356),
  ('conditionals -> LBRACKET error RBRACKET GOTO var_call_id','conditionals',5,'p_conditionals_error','Parser.py',368),
  ('conditionals -> LBRACKET error RBRACKET var_call_id','conditionals',4,'p_conditionals_error','Parser.py',369),
  ('conditionals -> LBRACKET logics RBRACKET GOTO error','conditionals',5,'p_conditionals_error','Parser.py',371),
  ('conditionals -> LBRACKET logic_expr RBRACKET GOTO error','conditionals',5,'p_conditionals_error','Parser.py',372),
  ('conditionals -> LBRACKET logics RBRACKET error','conditionals',4,'p_conditionals_error','Parser.py',373),
  ('conditionals -> LBRACKET logic_expr RBRACKET error','conditionals',4,'p_conditionals_error','Parser.py',374),
  ('conditionals -> GOTO error','conditionals',2,'p_conditionals_error','Parser.py',376),
  ('conditionals -> error','conditionals',1,'p_conditionals_error','Parser.py',377),
  ('pass -> PASS','pass',1,'p_pass','Parser.py',392),
  ('identification -> declaration LINK var_call_id','identification',3,'p_identification','Parser.py',398),
  ('identification -> call LINK var_call_id','identification',3,'p_identification','Parser.py',399),
  ('identification -> declaration LINK_BREAK var_call_id','identification',3,'p_identification','Parser.py',400),
  ('identification -> call LINK_BREAK var_call_id','identification',3,'p_identification','Parser.py',401),
  ('identification -> error LINK var_call_id','identification',3,'p_identification_error','Parser.py',406),
  ('identification -> error LINK_BREAK var_call_id','identification',3,'p_identification_error','Parser.py',407),
  ('identification -> declaration LINK error','identification',3,'p_identification_error','Parser.py',409),
  ('identification -> call LINK error','identification',3,'p_identification_error','Parser.py',410),
  ('identification -> declaration LINK_BREAK error','identification',3,'p_identification_error','Parser.py',411),
  ('identification -> call LINK_BREAK error','identification',3,'p_identification_error','Parser.py',412),
  ('identification -> identification error','identification',2,'p_identification_error','Parser.py',414),
  ('identification -> literal LINK var_call_id','identification',3,'p_identification_error','Parser.py',415),
  ('identification -> literal LINK_BREAK var_call_id','identification',3,'p_identification_error','Parser.py',416),
  ('robot -> FORWARD','robot',1,'p_robot','Parser.py',428),
  ('robot -> BACK','robot',1,'p_robot','Parser.py',429),
  ('robot -> RIGHT','robot',1,'p_robot','Parser.py',430),
  ('robot -> LEFT','robot',1,'p_robot','Parser.py',431),
  ('robot -> TP','robot',1,'p_robot','Parser.py',432),
  ('empty -> NL','empty',1,'p_empty','Parser.py',437),
]
