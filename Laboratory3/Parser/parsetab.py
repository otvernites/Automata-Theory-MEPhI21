
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ARR_CALL ASSIGN BACK BOOL_ARR BOOL_VAR COLON DASH DECR EQ FALSE FORWARD GOTO INCR INT INT_ARR INT_VAR LABEL LBRACE LBRACKET LEFT LINK LINK_BREAK LPAREN NL NOR PASS PROC_ARR PROC_VAR RBRACE RBRACKET RIGHT RPAREN TP TRUE VAR_CALLprogram : statement_block NL\n                   | statement_block\n        program : error NL\n                   | error\n                   | statement_block error\n                   | statement_block error NL\n        statement_block : statement_block statement\n                           | statement\n        statement_block : error\n        statement : declaration NL\n                     | assignment NL\n                     | arithmetic NL\n                     | logics NL\n                     | comparison NL\n                     | cycle NL\n                     | conditionals NL\n                     | pass NL\n                     | identification NL\n                     | robot NL\n                     | empty\n                     | LPAREN statement RPAREN NL\n        statement : error\n                     | LPAREN error RPAREN NL\n        variable : INT_VARvariable : BOOL_VARvariable : int_arr_var\n                    | bool_arr_var\n        procedure : PROC_VARprocedure : proc_arr_varlabel : LABELliteral : LPAREN INT RPAREN\n                   | INT\n                   | TRUE\n                   | FALSE\n        var_call_id : VAR_CALLarr_call_id : ARR_CALL LBRACKET id_list RBRACKETcall : arr_call_id\n                | var_call_id\n        int_arr_var : INT_ARR LBRACKET id_list RBRACKETbool_arr_var : BOOL_ARR LBRACKET id_list RBRACKETproc_arr_var : PROC_ARR LBRACKET id_list RBRACKETid_list : id_list id\n                   | id\n        id : INTid : calldeclaration : label\n                       | declaration_set\n        declaration : errordeclaration_set : variable\n                           | procedure\n        assignment : declaration ASSIGN literal\n                      | declaration ASSIGN call\n\n                      | call ASSIGN call\n                      | call ASSIGN literal\n\n                      | declaration ASSIGN arithmetic\n                      | declaration ASSIGN logics\n                      | declaration ASSIGN comparison\n                      | declaration ASSIGN identification\n                      | declaration ASSIGN robot\n\n                      | call ASSIGN arithmetic\n                      | call ASSIGN logics\n                      | call ASSIGN comparison\n                      | call ASSIGN identification\n                      | call ASSIGN robot\n\n                      | call ASSIGN LBRACE NL statement_block RBRACE\n        assignment : error ASSIGN call\n                      | error ASSIGN literal\n                      | declaration ASSIGN error\n\n                      | call ASSIGN error\n\n                      | error ASSIGN arithmetic\n                      | error ASSIGN logics\n                      | error ASSIGN comparison\n                      | error ASSIGN identification\n                      | error ASSIGN robot\n\n                      | error ASSIGN LBRACE statement_block RBRACE\n                      | call ASSIGN LBRACE error RBRACE\n        arithmetic : INCR\n                      | DECR\n        arithmetic : errorlog_type : TRUE\n                    | FALSE\n                    | call\n        logic_expr : logic_expr DASH log_type\n                      | log_type\n        logics : NOR logic_expr\n        logics : NOR errorcomparison : arithmetic EQ INT\n                      | arithmetic EQ var_call_id\n                      | logics EQ TRUE\n                      | logics EQ FALSE\n                      | logic_expr EQ TRUE\n                      | logic_expr EQ FALSE\n                      | call EQ PASS\n                      | call EQ literal\n        comparison : error EQ INT\n                      | error EQ TRUE\n                      | error EQ FALSE\n                      | error EQ PASS\n\n                      | arithmetic EQ error\n                      | logics EQ error\n                      | logic_expr EQ error\n                      | call EQ error\n\n                      | arithmetic EQ error conditionals\n                      | logics EQ error conditionals\n        cycle : LPAREN logics RPAREN LBRACE NL statement_block RBRACE\n                 | LPAREN logic_expr RPAREN LBRACE NL statement_block RBRACE\n        cycle : LPAREN error RPAREN LBRACE NL statement_block RBRACE\n                 | LPAREN logics RPAREN LBRACE NL error RBRACE\n                 | LPAREN logic_expr RPAREN LBRACE NL error RBRACE\n        conditionals : LBRACKET logics RBRACKET GOTO var_call_id\n                        | LBRACKET logic_expr RBRACKET GOTO var_call_id\n                        | LBRACKET logics RBRACKET var_call_id\n                        | LBRACKET logic_expr RBRACKET var_call_id\n                        | GOTO var_call_id\n                        | var_call_id\n        conditionals : LBRACKET error RBRACKET GOTO var_call_id\n                        | LBRACKET error RBRACKET var_call_id\n\n                        | LBRACKET logics RBRACKET GOTO error\n                        | LBRACKET logic_expr RBRACKET GOTO error\n                        | LBRACKET logics RBRACKET error\n                        | LBRACKET logic_expr RBRACKET error\n\n                        | GOTO error\n                        | error\n        pass : PASSidentification : call LINK var_call_id\n                          | call LINK_BREAK var_call_id\n        identification : error LINK var_call_id\n                          | error LINK_BREAK var_call_id\n\n                          | call LINK error\n                          | call LINK_BREAK error\n\n                          | identification error\n                          | literal LINK var_call_id\n                          | literal LINK_BREAK var_call_id\n        robot : FORWARD\n                 | BACK\n                 | RIGHT\n                 | LEFT\n                 | TP\n        empty : NL'
    
_lr_action_items = {'error':([0,2,3,4,5,14,16,17,24,31,32,43,54,55,56,58,62,63,64,65,66,67,68,69,70,71,72,73,74,75,85,86,87,88,95,113,115,121,122,128,133,136,142,143,149,151,158,159,160,161,166,167,176,177,183,184,188,190,193,203,205,206,207,208,215,216,217,218,219,],[4,55,-139,-9,-8,74,-20,77,90,99,101,-35,-139,-22,-7,107,-10,130,-11,-12,133,-13,136,-14,-15,-16,-17,-18,-131,-19,152,155,159,161,164,74,176,-127,-128,74,179,179,-132,-133,74,189,-125,-129,-126,-130,192,195,-9,203,-21,-23,176,211,213,-22,176,217,219,203,203,203,-9,203,-9,]),'LPAREN':([0,2,3,4,5,16,17,54,55,56,58,62,63,64,65,67,69,70,71,72,73,75,85,86,115,176,177,183,184,188,203,205,206,207,208,215,216,217,218,219,],[17,17,-139,-9,-8,-20,17,-139,-22,-7,116,-10,116,-11,-12,-13,-14,-15,-16,-17,-18,-19,116,116,17,-9,17,-21,-23,17,-22,17,17,17,17,17,17,-9,17,-9,]),'INCR':([0,2,3,4,5,16,17,54,55,56,58,62,63,64,65,67,69,70,71,72,73,75,85,115,176,177,183,184,188,203,205,206,207,208,215,216,217,218,219,],[22,22,-139,-9,-8,-20,22,-139,-22,-7,22,-10,22,-11,-12,-13,-14,-15,-16,-17,-18,-19,22,22,-9,22,-21,-23,22,-22,22,22,22,22,22,22,-9,22,-9,]),'DECR':([0,2,3,4,5,16,17,54,55,56,58,62,63,64,65,67,69,70,71,72,73,75,85,115,176,177,183,184,188,203,205,206,207,208,215,216,217,218,219,],[23,23,-139,-9,-8,-20,23,-139,-22,-7,23,-10,23,-11,-12,-13,-14,-15,-16,-17,-18,-19,23,23,-9,23,-21,-23,23,-22,23,23,23,23,23,23,-9,23,-9,]),'NOR':([0,2,3,4,5,16,17,31,54,55,56,58,62,63,64,65,67,69,70,71,72,73,75,85,115,176,177,183,184,188,203,205,206,207,208,215,216,217,218,219,],[24,24,-139,-9,-8,-20,24,24,-139,-22,-7,24,-10,24,-11,-12,-13,-14,-15,-16,-17,-18,-19,24,24,-9,24,-21,-23,24,-22,24,24,24,24,24,24,-9,24,-9,]),'LBRACKET':([0,2,3,4,5,16,17,50,51,52,53,54,55,56,62,64,65,67,69,70,71,72,73,75,115,133,136,176,177,183,184,188,203,205,206,207,208,215,216,217,218,219,],[31,31,-139,-9,-8,-20,31,102,103,104,105,-139,-22,-7,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,31,31,31,-9,31,-21,-23,31,-22,31,31,31,31,31,31,-9,31,-9,]),'GOTO':([0,2,3,4,5,16,17,54,55,56,62,64,65,67,69,70,71,72,73,75,115,133,136,166,167,168,176,177,183,184,188,203,205,206,207,208,215,216,217,218,219,],[32,32,-139,-9,-8,-20,32,-139,-22,-7,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,32,32,32,190,193,196,-9,32,-21,-23,32,-22,32,32,32,32,32,32,-9,32,-9,]),'PASS':([0,2,3,4,5,16,17,54,55,56,59,62,64,65,67,69,70,71,72,73,75,86,115,176,177,183,184,188,203,205,206,207,208,215,216,217,218,219,],[30,30,-139,-9,-8,-20,30,-139,-22,-7,120,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,153,30,-9,30,-21,-23,30,-22,30,30,30,30,30,30,-9,30,-9,]),'FORWARD':([0,2,3,4,5,16,17,54,55,56,58,62,63,64,65,67,69,70,71,72,73,75,85,115,176,177,183,184,188,203,205,206,207,208,215,216,217,218,219,],[33,33,-139,-9,-8,-20,33,-139,-22,-7,33,-10,33,-11,-12,-13,-14,-15,-16,-17,-18,-19,33,33,-9,33,-21,-23,33,-22,33,33,33,33,33,33,-9,33,-9,]),'BACK':([0,2,3,4,5,16,17,54,55,56,58,62,63,64,65,67,69,70,71,72,73,75,85,115,176,177,183,184,188,203,205,206,207,208,215,216,217,218,219,],[34,34,-139,-9,-8,-20,34,-139,-22,-7,34,-10,34,-11,-12,-13,-14,-15,-16,-17,-18,-19,34,34,-9,34,-21,-23,34,-22,34,34,34,34,34,34,-9,34,-9,]),'RIGHT':([0,2,3,4,5,16,17,54,55,56,58,62,63,64,65,67,69,70,71,72,73,75,85,115,176,177,183,184,188,203,205,206,207,208,215,216,217,218,219,],[35,35,-139,-9,-8,-20,35,-139,-22,-7,35,-10,35,-11,-12,-13,-14,-15,-16,-17,-18,-19,35,35,-9,35,-21,-23,35,-22,35,35,35,35,35,35,-9,35,-9,]),'LEFT':([0,2,3,4,5,16,17,54,55,56,58,62,63,64,65,67,69,70,71,72,73,75,85,115,176,177,183,184,188,203,205,206,207,208,215,216,217,218,219,],[36,36,-139,-9,-8,-20,36,-139,-22,-7,36,-10,36,-11,-12,-13,-14,-15,-16,-17,-18,-19,36,36,-9,36,-21,-23,36,-22,36,36,36,36,36,36,-9,36,-9,]),'TP':([0,2,3,4,5,16,17,54,55,56,58,62,63,64,65,67,69,70,71,72,73,75,85,115,176,177,183,184,188,203,205,206,207,208,215,216,217,218,219,],[37,37,-139,-9,-8,-20,37,-139,-22,-7,37,-10,37,-11,-12,-13,-14,-15,-16,-17,-18,-19,37,37,-9,37,-21,-23,37,-22,37,37,37,37,37,37,-9,37,-9,]),'NL':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,22,23,26,27,28,29,30,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,54,55,56,62,64,65,67,69,70,71,72,73,74,75,77,78,89,90,91,92,93,94,100,101,107,108,109,110,111,112,113,114,115,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,176,177,179,180,181,182,183,184,185,186,187,188,191,192,194,195,197,198,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,],[3,54,-139,57,-8,62,64,65,67,69,70,71,72,73,75,-20,3,-46,-47,-77,-78,-32,-115,-33,-34,-124,-134,-135,-136,-137,-138,-30,-49,-50,-37,-84,-35,-24,-25,-26,-27,-28,-29,-139,106,-7,-10,-11,-12,-13,-14,-15,-16,-17,-18,-131,-19,-48,67,-85,-86,-80,-81,-82,-38,-114,-122,-79,-66,-67,-70,-71,-72,-73,-74,3,-95,-96,-97,-98,-127,-128,-51,-52,-55,-56,-57,-58,-59,-68,-87,-88,-99,-89,-90,-100,183,184,-31,-132,-133,-53,-54,-60,-61,-62,-63,-64,188,-69,-93,-94,-102,-33,-34,-125,-129,-126,-130,-91,-92,-101,-83,-9,3,-123,-103,-115,-104,-21,-23,205,206,207,3,-112,-120,-113,-121,-117,-36,-39,-40,-41,-22,-75,3,3,3,3,-76,-110,-118,-111,-119,-116,3,3,-9,3,-9,-65,-107,-105,-108,-106,-109,]),'LABEL':([0,2,3,4,5,16,17,54,55,56,62,64,65,67,69,70,71,72,73,75,115,176,177,183,184,188,203,205,206,207,208,215,216,217,218,219,],[38,38,-139,-9,-8,-20,38,-139,-22,-7,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,38,-9,38,-21,-23,38,-22,38,38,38,38,38,38,-9,38,-9,]),'VAR_CALL':([0,2,3,4,5,16,17,24,31,32,41,43,54,55,56,58,60,61,62,63,64,65,66,67,69,70,71,72,73,75,83,84,85,87,88,94,96,102,103,104,105,115,133,136,166,167,168,169,170,171,172,173,174,175,176,177,183,184,188,190,193,196,198,199,203,205,206,207,208,215,216,217,218,219,],[43,43,-139,-9,-8,-20,43,43,43,43,-37,-35,-139,-22,-7,43,43,43,-10,43,-11,-12,43,-13,-14,-15,-16,-17,-18,-19,43,43,43,43,43,-38,43,43,43,43,43,43,43,43,43,43,43,43,-43,-44,-45,43,43,43,-9,43,-21,-23,43,43,43,43,-36,-42,-22,43,43,43,43,43,43,-9,43,-9,]),'INT':([0,2,3,4,5,16,17,41,43,54,55,56,58,59,62,63,64,65,66,67,69,70,71,72,73,75,85,86,94,102,103,104,105,115,116,169,170,171,172,173,174,175,176,177,183,184,188,198,199,203,205,206,207,208,215,216,217,218,219,],[26,26,-139,-9,-8,-20,80,-37,-35,-139,-22,-7,26,117,-10,26,-11,-12,131,-13,-14,-15,-16,-17,-18,-19,26,26,-38,171,171,171,171,26,178,171,-43,-44,-45,171,171,171,-9,26,-21,-23,26,-36,-42,-22,26,26,26,26,26,26,-9,26,-9,]),'TRUE':([0,2,3,4,5,16,17,24,31,54,55,56,58,59,62,63,64,65,67,68,69,70,71,72,73,75,85,86,95,96,115,176,177,183,184,188,203,205,206,207,208,215,216,217,218,219,],[28,28,-139,-9,-8,-20,81,91,91,-139,-22,-7,28,118,-10,28,-11,-12,-13,134,-14,-15,-16,-17,-18,-19,28,156,162,91,28,-9,28,-21,-23,28,-22,28,28,28,28,28,28,-9,28,-9,]),'FALSE':([0,2,3,4,5,16,17,24,31,54,55,56,58,59,62,63,64,65,67,68,69,70,71,72,73,75,85,86,95,96,115,176,177,183,184,188,203,205,206,207,208,215,216,217,218,219,],[29,29,-139,-9,-8,-20,82,92,92,-139,-22,-7,29,119,-10,29,-11,-12,-13,135,-14,-15,-16,-17,-18,-19,29,157,163,92,29,-9,29,-21,-23,29,-22,29,29,29,29,29,29,-9,29,-9,]),'INT_VAR':([0,2,3,4,5,16,17,54,55,56,62,64,65,67,69,70,71,72,73,75,115,176,177,183,184,188,203,205,206,207,208,215,216,217,218,219,],[44,44,-139,-9,-8,-20,44,-139,-22,-7,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,44,-9,44,-21,-23,44,-22,44,44,44,44,44,44,-9,44,-9,]),'BOOL_VAR':([0,2,3,4,5,16,17,54,55,56,62,64,65,67,69,70,71,72,73,75,115,176,177,183,184,188,203,205,206,207,208,215,216,217,218,219,],[45,45,-139,-9,-8,-20,45,-139,-22,-7,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,45,-9,45,-21,-23,45,-22,45,45,45,45,45,45,-9,45,-9,]),'PROC_VAR':([0,2,3,4,5,16,17,54,55,56,62,64,65,67,69,70,71,72,73,75,115,176,177,183,184,188,203,205,206,207,208,215,216,217,218,219,],[48,48,-139,-9,-8,-20,48,-139,-22,-7,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,48,-9,48,-21,-23,48,-22,48,48,48,48,48,48,-9,48,-9,]),'ARR_CALL':([0,2,3,4,5,16,17,24,31,41,43,54,55,56,58,62,63,64,65,67,69,70,71,72,73,75,85,94,96,102,103,104,105,115,169,170,171,172,173,174,175,176,177,183,184,188,198,199,203,205,206,207,208,215,216,217,218,219,],[50,50,-139,-9,-8,-20,50,50,50,-37,-35,-139,-22,-7,50,-10,50,-11,-12,-13,-14,-15,-16,-17,-18,-19,50,-38,50,50,50,50,50,50,50,-43,-44,-45,50,50,50,-9,50,-21,-23,50,-36,-42,-22,50,50,50,50,50,50,-9,50,-9,]),'INT_ARR':([0,2,3,4,5,16,17,54,55,56,62,64,65,67,69,70,71,72,73,75,115,176,177,183,184,188,203,205,206,207,208,215,216,217,218,219,],[51,51,-139,-9,-8,-20,51,-139,-22,-7,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,51,-9,51,-21,-23,51,-22,51,51,51,51,51,51,-9,51,-9,]),'BOOL_ARR':([0,2,3,4,5,16,17,54,55,56,62,64,65,67,69,70,71,72,73,75,115,176,177,183,184,188,203,205,206,207,208,215,216,217,218,219,],[52,52,-139,-9,-8,-20,52,-139,-22,-7,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,52,-9,52,-21,-23,52,-22,52,52,52,52,52,52,-9,52,-9,]),'PROC_ARR':([0,2,3,4,5,16,17,54,55,56,62,64,65,67,69,70,71,72,73,75,115,176,177,183,184,188,203,205,206,207,208,215,216,217,218,219,],[53,53,-139,-9,-8,-20,53,-139,-22,-7,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,53,-9,53,-21,-23,53,-22,53,53,53,53,53,53,-9,53,-9,]),'$end':([1,2,3,4,5,16,54,55,56,57,62,64,65,67,69,70,71,72,73,75,106,183,184,],[0,-2,-139,-4,-8,-20,-1,-5,-7,-3,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-6,-21,-23,]),'RPAREN':([3,16,21,27,41,42,43,62,64,65,67,69,70,71,72,73,75,76,77,78,79,80,81,82,89,90,91,92,93,94,165,178,183,184,198,],[-139,-20,-82,-38,-37,-84,-35,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,137,138,139,140,141,-80,-81,-85,-86,-80,-81,-82,-38,-83,141,-21,-23,-36,]),'RBRACE':([3,5,16,56,62,64,65,67,69,70,71,72,73,75,176,177,183,184,189,203,208,215,216,217,218,219,],[-139,-8,-20,-7,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-9,204,-21,-23,209,-22,220,221,222,223,224,225,]),'ASSIGN':([4,6,18,19,21,27,38,39,40,41,43,44,45,46,47,48,49,55,77,176,198,200,201,202,203,217,219,],[58,63,-46,-47,85,-38,-30,-49,-50,-37,-35,-24,-25,-26,-27,-28,-29,58,58,58,-36,-39,-40,-41,58,58,58,]),'EQ':([4,8,9,21,22,23,25,27,28,29,41,42,43,55,77,78,79,81,82,89,90,91,92,93,94,107,108,110,111,124,125,126,130,144,146,147,152,165,176,198,203,217,219,],[59,66,68,86,-77,-78,95,-38,-80,-81,-37,-84,-35,59,59,68,95,-80,-81,-85,-86,-80,-81,-82,-38,59,86,66,68,86,66,68,59,86,66,68,59,-83,59,-36,59,59,59,]),'LINK':([4,20,21,26,27,28,29,41,43,55,77,80,81,82,94,107,108,109,123,124,130,141,144,145,152,176,198,203,217,219,],[60,83,87,-32,-38,-33,-34,-37,-35,60,60,-32,-33,-34,-38,60,87,83,83,87,60,-31,87,83,60,60,-36,60,60,60,]),'LINK_BREAK':([4,20,21,26,27,28,29,41,43,55,77,80,81,82,94,107,108,109,123,124,130,141,144,145,152,176,198,203,217,219,],[61,84,88,-32,-38,-33,-34,-37,-35,61,61,-32,-33,-34,-38,61,88,84,84,88,61,-31,88,84,61,61,-36,61,61,61,]),'DASH':([21,25,27,28,29,41,42,43,79,81,82,89,91,92,93,94,98,108,124,144,165,198,],[-82,96,-38,-80,-81,-37,-84,-35,96,-80,-81,96,-80,-81,-82,-38,96,-82,-82,-82,-83,-36,]),'RBRACKET':([41,42,43,89,90,91,92,93,94,97,98,99,165,169,170,171,172,173,174,175,198,199,],[-37,-84,-35,-85,-86,-80,-81,-82,-38,166,167,168,-83,198,-43,-44,-45,200,201,202,-36,-42,]),'LBRACE':([58,85,138,139,140,],[115,151,185,186,187,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_block':([0,115,188,205,206,207,],[2,177,208,215,216,218,]),'statement':([0,2,17,115,177,188,205,206,207,208,215,216,218,],[5,56,76,5,56,5,5,5,5,56,56,56,56,]),'declaration':([0,2,17,115,177,188,205,206,207,208,215,216,218,],[6,6,6,6,6,6,6,6,6,6,6,6,6,]),'assignment':([0,2,17,115,177,188,205,206,207,208,215,216,218,],[7,7,7,7,7,7,7,7,7,7,7,7,7,]),'arithmetic':([0,2,17,58,63,85,115,177,188,205,206,207,208,215,216,218,],[8,8,8,110,125,146,8,8,8,8,8,8,8,8,8,8,]),'logics':([0,2,17,31,58,63,85,115,177,188,205,206,207,208,215,216,218,],[9,9,78,97,111,126,147,9,9,9,9,9,9,9,9,9,9,]),'comparison':([0,2,17,58,63,85,115,177,188,205,206,207,208,215,216,218,],[10,10,10,112,127,148,10,10,10,10,10,10,10,10,10,10,]),'cycle':([0,2,17,115,177,188,205,206,207,208,215,216,218,],[11,11,11,11,11,11,11,11,11,11,11,11,11,]),'conditionals':([0,2,17,115,133,136,177,188,205,206,207,208,215,216,218,],[12,12,12,12,180,182,12,12,12,12,12,12,12,12,12,]),'pass':([0,2,17,115,177,188,205,206,207,208,215,216,218,],[13,13,13,13,13,13,13,13,13,13,13,13,13,]),'identification':([0,2,17,58,63,85,115,177,188,205,206,207,208,215,216,218,],[14,14,14,113,128,149,14,14,14,14,14,14,14,14,14,14,]),'robot':([0,2,17,58,63,85,115,177,188,205,206,207,208,215,216,218,],[15,15,15,114,129,150,15,15,15,15,15,15,15,15,15,15,]),'empty':([0,2,17,115,177,188,205,206,207,208,215,216,218,],[16,16,16,16,16,16,16,16,16,16,16,16,16,]),'label':([0,2,17,115,177,188,205,206,207,208,215,216,218,],[18,18,18,18,18,18,18,18,18,18,18,18,18,]),'declaration_set':([0,2,17,115,177,188,205,206,207,208,215,216,218,],[19,19,19,19,19,19,19,19,19,19,19,19,19,]),'literal':([0,2,17,58,63,85,86,115,177,188,205,206,207,208,215,216,218,],[20,20,20,109,123,145,154,20,20,20,20,20,20,20,20,20,20,]),'call':([0,2,17,24,31,58,63,85,96,102,103,104,105,115,169,173,174,175,177,188,205,206,207,208,215,216,218,],[21,21,21,93,93,108,124,144,93,172,172,172,172,21,172,172,172,172,21,21,21,21,21,21,21,21,21,]),'logic_expr':([0,2,17,24,31,58,63,85,115,177,188,205,206,207,208,215,216,218,],[25,25,79,89,98,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'var_call_id':([0,2,17,24,31,32,58,60,61,63,66,83,84,85,87,88,96,102,103,104,105,115,133,136,166,167,168,169,173,174,175,177,188,190,193,196,205,206,207,208,215,216,218,],[27,27,27,94,94,100,94,121,122,94,132,142,143,94,158,160,94,94,94,94,94,27,181,181,191,194,197,94,94,94,94,27,27,210,212,214,27,27,27,27,27,27,27,]),'variable':([0,2,17,115,177,188,205,206,207,208,215,216,218,],[39,39,39,39,39,39,39,39,39,39,39,39,39,]),'procedure':([0,2,17,115,177,188,205,206,207,208,215,216,218,],[40,40,40,40,40,40,40,40,40,40,40,40,40,]),'arr_call_id':([0,2,17,24,31,58,63,85,96,102,103,104,105,115,169,173,174,175,177,188,205,206,207,208,215,216,218,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'log_type':([0,2,17,24,31,58,63,85,96,115,177,188,205,206,207,208,215,216,218,],[42,42,42,42,42,42,42,42,165,42,42,42,42,42,42,42,42,42,42,]),'int_arr_var':([0,2,17,115,177,188,205,206,207,208,215,216,218,],[46,46,46,46,46,46,46,46,46,46,46,46,46,]),'bool_arr_var':([0,2,17,115,177,188,205,206,207,208,215,216,218,],[47,47,47,47,47,47,47,47,47,47,47,47,47,]),'proc_arr_var':([0,2,17,115,177,188,205,206,207,208,215,216,218,],[49,49,49,49,49,49,49,49,49,49,49,49,49,]),'id_list':([102,103,104,105,],[169,173,174,175,]),'id':([102,103,104,105,169,173,174,175,],[170,170,170,170,199,199,199,199,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_block NL','program',2,'p_program','Parser.py',31),
  ('program -> statement_block','program',1,'p_program','Parser.py',32),
  ('program -> error NL','program',2,'p_program_error','Parser.py',37),
  ('program -> error','program',1,'p_program_error','Parser.py',38),
  ('program -> statement_block error','program',2,'p_program_error','Parser.py',39),
  ('program -> statement_block error NL','program',3,'p_program_error','Parser.py',40),
  ('statement_block -> statement_block statement','statement_block',2,'p_statement_block','Parser.py',47),
  ('statement_block -> statement','statement_block',1,'p_statement_block','Parser.py',48),
  ('statement_block -> error','statement_block',1,'p_statement_block_error','Parser.py',56),
  ('statement -> declaration NL','statement',2,'p_statement','Parser.py',63),
  ('statement -> assignment NL','statement',2,'p_statement','Parser.py',64),
  ('statement -> arithmetic NL','statement',2,'p_statement','Parser.py',65),
  ('statement -> logics NL','statement',2,'p_statement','Parser.py',66),
  ('statement -> comparison NL','statement',2,'p_statement','Parser.py',67),
  ('statement -> cycle NL','statement',2,'p_statement','Parser.py',68),
  ('statement -> conditionals NL','statement',2,'p_statement','Parser.py',69),
  ('statement -> pass NL','statement',2,'p_statement','Parser.py',70),
  ('statement -> identification NL','statement',2,'p_statement','Parser.py',71),
  ('statement -> robot NL','statement',2,'p_statement','Parser.py',72),
  ('statement -> empty','statement',1,'p_statement','Parser.py',73),
  ('statement -> LPAREN statement RPAREN NL','statement',4,'p_statement','Parser.py',74),
  ('statement -> error','statement',1,'p_statement_error','Parser.py',82),
  ('statement -> LPAREN error RPAREN NL','statement',4,'p_statement_error','Parser.py',83),
  ('variable -> INT_VAR','variable',1,'p_variable_int','Parser.py',96),
  ('variable -> BOOL_VAR','variable',1,'p_variable_bool','Parser.py',100),
  ('variable -> int_arr_var','variable',1,'p_variable','Parser.py',104),
  ('variable -> bool_arr_var','variable',1,'p_variable','Parser.py',105),
  ('procedure -> PROC_VAR','procedure',1,'p_procedure_simple','Parser.py',110),
  ('procedure -> proc_arr_var','procedure',1,'p_procedure','Parser.py',116),
  ('label -> LABEL','label',1,'p_label','Parser.py',126),
  ('literal -> LPAREN INT RPAREN','literal',3,'p_literal','Parser.py',132),
  ('literal -> INT','literal',1,'p_literal','Parser.py',133),
  ('literal -> TRUE','literal',1,'p_literal','Parser.py',134),
  ('literal -> FALSE','literal',1,'p_literal','Parser.py',135),
  ('var_call_id -> VAR_CALL','var_call_id',1,'p_var_call_id','Parser.py',143),
  ('arr_call_id -> ARR_CALL LBRACKET id_list RBRACKET','arr_call_id',4,'p_arr_call_id','Parser.py',148),
  ('call -> arr_call_id','call',1,'p_call','Parser.py',152),
  ('call -> var_call_id','call',1,'p_call','Parser.py',153),
  ('int_arr_var -> INT_ARR LBRACKET id_list RBRACKET','int_arr_var',4,'p_int_arr_var','Parser.py',159),
  ('bool_arr_var -> BOOL_ARR LBRACKET id_list RBRACKET','bool_arr_var',4,'p_bool_arr_var','Parser.py',163),
  ('proc_arr_var -> PROC_ARR LBRACKET id_list RBRACKET','proc_arr_var',4,'p_proc_arr_var','Parser.py',167),
  ('id_list -> id_list id','id_list',2,'p_id_list','Parser.py',171),
  ('id_list -> id','id_list',1,'p_id_list','Parser.py',172),
  ('id -> INT','id',1,'p_id_simple','Parser.py',181),
  ('id -> call','id',1,'p_id','Parser.py',185),
  ('declaration -> label','declaration',1,'p_declaration','Parser.py',191),
  ('declaration -> declaration_set','declaration',1,'p_declaration','Parser.py',192),
  ('declaration -> error','declaration',1,'p_declaration_error','Parser.py',197),
  ('declaration_set -> variable','declaration_set',1,'p_declaration_set','Parser.py',203),
  ('declaration_set -> procedure','declaration_set',1,'p_declaration_set','Parser.py',204),
  ('assignment -> declaration ASSIGN literal','assignment',3,'p_assignment','Parser.py',212),
  ('assignment -> declaration ASSIGN call','assignment',3,'p_assignment','Parser.py',213),
  ('assignment -> call ASSIGN call','assignment',3,'p_assignment','Parser.py',215),
  ('assignment -> call ASSIGN literal','assignment',3,'p_assignment','Parser.py',216),
  ('assignment -> declaration ASSIGN arithmetic','assignment',3,'p_assignment','Parser.py',218),
  ('assignment -> declaration ASSIGN logics','assignment',3,'p_assignment','Parser.py',219),
  ('assignment -> declaration ASSIGN comparison','assignment',3,'p_assignment','Parser.py',220),
  ('assignment -> declaration ASSIGN identification','assignment',3,'p_assignment','Parser.py',221),
  ('assignment -> declaration ASSIGN robot','assignment',3,'p_assignment','Parser.py',222),
  ('assignment -> call ASSIGN arithmetic','assignment',3,'p_assignment','Parser.py',224),
  ('assignment -> call ASSIGN logics','assignment',3,'p_assignment','Parser.py',225),
  ('assignment -> call ASSIGN comparison','assignment',3,'p_assignment','Parser.py',226),
  ('assignment -> call ASSIGN identification','assignment',3,'p_assignment','Parser.py',227),
  ('assignment -> call ASSIGN robot','assignment',3,'p_assignment','Parser.py',228),
  ('assignment -> call ASSIGN LBRACE NL statement_block RBRACE','assignment',6,'p_assignment','Parser.py',230),
  ('assignment -> error ASSIGN call','assignment',3,'p_assignment_error','Parser.py',238),
  ('assignment -> error ASSIGN literal','assignment',3,'p_assignment_error','Parser.py',239),
  ('assignment -> declaration ASSIGN error','assignment',3,'p_assignment_error','Parser.py',240),
  ('assignment -> call ASSIGN error','assignment',3,'p_assignment_error','Parser.py',242),
  ('assignment -> error ASSIGN arithmetic','assignment',3,'p_assignment_error','Parser.py',244),
  ('assignment -> error ASSIGN logics','assignment',3,'p_assignment_error','Parser.py',245),
  ('assignment -> error ASSIGN comparison','assignment',3,'p_assignment_error','Parser.py',246),
  ('assignment -> error ASSIGN identification','assignment',3,'p_assignment_error','Parser.py',247),
  ('assignment -> error ASSIGN robot','assignment',3,'p_assignment_error','Parser.py',248),
  ('assignment -> error ASSIGN LBRACE statement_block RBRACE','assignment',5,'p_assignment_error','Parser.py',250),
  ('assignment -> call ASSIGN LBRACE error RBRACE','assignment',5,'p_assignment_error','Parser.py',251),
  ('arithmetic -> INCR','arithmetic',1,'p_arithmetic','Parser.py',263),
  ('arithmetic -> DECR','arithmetic',1,'p_arithmetic','Parser.py',264),
  ('arithmetic -> error','arithmetic',1,'p_arithmetic_error','Parser.py',272),
  ('log_type -> TRUE','log_type',1,'p_log_type','Parser.py',280),
  ('log_type -> FALSE','log_type',1,'p_log_type','Parser.py',281),
  ('log_type -> call','log_type',1,'p_log_type','Parser.py',282),
  ('logic_expr -> logic_expr DASH log_type','logic_expr',3,'p_logic_expr','Parser.py',291),
  ('logic_expr -> log_type','logic_expr',1,'p_logic_expr','Parser.py',292),
  ('logics -> NOR logic_expr','logics',2,'p_logics','Parser.py',300),
  ('logics -> NOR error','logics',2,'p_logics_error','Parser.py',305),
  ('comparison -> arithmetic EQ INT','comparison',3,'p_comparison','Parser.py',313),
  ('comparison -> arithmetic EQ var_call_id','comparison',3,'p_comparison','Parser.py',314),
  ('comparison -> logics EQ TRUE','comparison',3,'p_comparison','Parser.py',315),
  ('comparison -> logics EQ FALSE','comparison',3,'p_comparison','Parser.py',316),
  ('comparison -> logic_expr EQ TRUE','comparison',3,'p_comparison','Parser.py',317),
  ('comparison -> logic_expr EQ FALSE','comparison',3,'p_comparison','Parser.py',318),
  ('comparison -> call EQ PASS','comparison',3,'p_comparison','Parser.py',319),
  ('comparison -> call EQ literal','comparison',3,'p_comparison','Parser.py',320),
  ('comparison -> error EQ INT','comparison',3,'p_comparison_error','Parser.py',325),
  ('comparison -> error EQ TRUE','comparison',3,'p_comparison_error','Parser.py',326),
  ('comparison -> error EQ FALSE','comparison',3,'p_comparison_error','Parser.py',327),
  ('comparison -> error EQ PASS','comparison',3,'p_comparison_error','Parser.py',328),
  ('comparison -> arithmetic EQ error','comparison',3,'p_comparison_error','Parser.py',330),
  ('comparison -> logics EQ error','comparison',3,'p_comparison_error','Parser.py',331),
  ('comparison -> logic_expr EQ error','comparison',3,'p_comparison_error','Parser.py',332),
  ('comparison -> call EQ error','comparison',3,'p_comparison_error','Parser.py',333),
  ('comparison -> arithmetic EQ error conditionals','comparison',4,'p_comparison_error','Parser.py',335),
  ('comparison -> logics EQ error conditionals','comparison',4,'p_comparison_error','Parser.py',336),
  ('cycle -> LPAREN logics RPAREN LBRACE NL statement_block RBRACE','cycle',7,'p_cycle','Parser.py',344),
  ('cycle -> LPAREN logic_expr RPAREN LBRACE NL statement_block RBRACE','cycle',7,'p_cycle','Parser.py',345),
  ('cycle -> LPAREN error RPAREN LBRACE NL statement_block RBRACE','cycle',7,'p_cycle_error','Parser.py',350),
  ('cycle -> LPAREN logics RPAREN LBRACE NL error RBRACE','cycle',7,'p_cycle_error','Parser.py',351),
  ('cycle -> LPAREN logic_expr RPAREN LBRACE NL error RBRACE','cycle',7,'p_cycle_error','Parser.py',352),
  ('conditionals -> LBRACKET logics RBRACKET GOTO var_call_id','conditionals',5,'p_conditionals','Parser.py',361),
  ('conditionals -> LBRACKET logic_expr RBRACKET GOTO var_call_id','conditionals',5,'p_conditionals','Parser.py',362),
  ('conditionals -> LBRACKET logics RBRACKET var_call_id','conditionals',4,'p_conditionals','Parser.py',363),
  ('conditionals -> LBRACKET logic_expr RBRACKET var_call_id','conditionals',4,'p_conditionals','Parser.py',364),
  ('conditionals -> GOTO var_call_id','conditionals',2,'p_conditionals','Parser.py',365),
  ('conditionals -> var_call_id','conditionals',1,'p_conditionals','Parser.py',366),
  ('conditionals -> LBRACKET error RBRACKET GOTO var_call_id','conditionals',5,'p_conditionals_error','Parser.py',381),
  ('conditionals -> LBRACKET error RBRACKET var_call_id','conditionals',4,'p_conditionals_error','Parser.py',382),
  ('conditionals -> LBRACKET logics RBRACKET GOTO error','conditionals',5,'p_conditionals_error','Parser.py',384),
  ('conditionals -> LBRACKET logic_expr RBRACKET GOTO error','conditionals',5,'p_conditionals_error','Parser.py',385),
  ('conditionals -> LBRACKET logics RBRACKET error','conditionals',4,'p_conditionals_error','Parser.py',386),
  ('conditionals -> LBRACKET logic_expr RBRACKET error','conditionals',4,'p_conditionals_error','Parser.py',387),
  ('conditionals -> GOTO error','conditionals',2,'p_conditionals_error','Parser.py',389),
  ('conditionals -> error','conditionals',1,'p_conditionals_error','Parser.py',390),
  ('pass -> PASS','pass',1,'p_pass','Parser.py',405),
  ('identification -> call LINK var_call_id','identification',3,'p_identification','Parser.py',411),
  ('identification -> call LINK_BREAK var_call_id','identification',3,'p_identification','Parser.py',412),
  ('identification -> error LINK var_call_id','identification',3,'p_identification_error','Parser.py',417),
  ('identification -> error LINK_BREAK var_call_id','identification',3,'p_identification_error','Parser.py',418),
  ('identification -> call LINK error','identification',3,'p_identification_error','Parser.py',420),
  ('identification -> call LINK_BREAK error','identification',3,'p_identification_error','Parser.py',421),
  ('identification -> identification error','identification',2,'p_identification_error','Parser.py',423),
  ('identification -> literal LINK var_call_id','identification',3,'p_identification_error','Parser.py',424),
  ('identification -> literal LINK_BREAK var_call_id','identification',3,'p_identification_error','Parser.py',425),
  ('robot -> FORWARD','robot',1,'p_robot','Parser.py',437),
  ('robot -> BACK','robot',1,'p_robot','Parser.py',438),
  ('robot -> RIGHT','robot',1,'p_robot','Parser.py',439),
  ('robot -> LEFT','robot',1,'p_robot','Parser.py',440),
  ('robot -> TP','robot',1,'p_robot','Parser.py',441),
  ('empty -> NL','empty',1,'p_empty','Parser.py',446),
]
