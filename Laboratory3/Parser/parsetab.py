
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ARR_CALL ASSIGN ATTEMPTS BACK BOOL_ARR BOOL_VAR DASH DECR EQ FALSE FORWARD GOTO INCR INT INT_ARR INT_VAR LABEL LBRACE LBRACKET LEFT LINK LINK_BREAK LPAREN NL NOR PASS PROC_ARR PROC_VAR RBRACE RBRACKET RIGHT RPAREN SBACK SFORWARD SLEFT SRIGHT TP TRUE VAR_CALLprogram : statement_block NL\n                   | statement_block\n        program : error NL\n                   | error\n                   | statement_block error\n                   | statement_block error NL\n        statement_block : statement_block statement\n                           | statement\n        statement_block : error\n        statement : declaration NL\n                     | assignment NL\n                     | arithmetic NL\n                     | logics NL\n                     | comparison NL\n                     | cycle NL\n                     | conditionals NL\n                     | pass NL\n                     | identification NL\n                     | robot NL\n                     | empty\n                     | LPAREN statement RPAREN NL\n        statement : error\n                     | LPAREN error RPAREN NL\n        variable : INT_VARvariable : BOOL_VARvariable : int_arr_var\n                    | bool_arr_var\n        procedure : PROC_VARprocedure : proc_arr_varlabel : LABELliteral : LPAREN INT RPAREN\n                   | INT\n                   | TRUE\n                   | FALSE\n        var_call_id : VAR_CALLarr_call_id : ARR_CALL LBRACKET id_list RBRACKETcall : arr_call_id\n                | var_call_id\n        int_arr_var : INT_ARR LBRACKET id_list RBRACKETbool_arr_var : BOOL_ARR LBRACKET id_list RBRACKETproc_arr_var : PROC_ARR LBRACKET id_list RBRACKETid_list : id_list id\n                   | id\n        id : INTid : calldeclaration : label\n                       | declaration_set\n        declaration : errordeclaration_set : variable\n                           | procedure\n        assignment : declaration ASSIGN literal\n                      | declaration ASSIGN call\n\n                      | call ASSIGN call\n                      | call ASSIGN literal\n\n                      | declaration ASSIGN logics\n                      | declaration ASSIGN comparison\n                      | declaration ASSIGN identification\n                      | declaration ASSIGN robot\n\n                      | call ASSIGN logics\n                      | call ASSIGN comparison\n                      | call ASSIGN identification\n                      | call ASSIGN robot\n\n                      | call ASSIGN LBRACE NL statement_block RBRACE\n        assignment : error ASSIGN call\n                      | error ASSIGN literal\n                      | declaration ASSIGN error\n\n                      | call ASSIGN error\n\n                      | error ASSIGN logics\n                      | error ASSIGN comparison\n                      | error ASSIGN identification\n                      | error ASSIGN robot\n\n                      | error ASSIGN LBRACE statement_block RBRACE\n                      | call ASSIGN LBRACE error RBRACE\n        arithmetic : INCR\n                      | DECR\n        arithmetic : errorlog_type : TRUE\n                    | FALSE\n                    | call\n                    | comparison\n                    | identification\n                    | robot\n        log_type : errorlogic_expr : logic_expr DASH log_type\n                      | log_type\n        logic_expr : error DASH log_type\n                      | logic_expr DASH error\n                      | error\n        logics : NOR logic_expr\n        logics : NOR errorcomparison : arithmetic EQ INT\n                      | arithmetic EQ var_call_id\n\n                      | var_call_id EQ var_call_id\n                      | var_call_id EQ INT\n                      | arr_call_id EQ INT\n\n                      | var_call_id EQ TRUE\n                      | var_call_id EQ FALSE\n                      | arr_call_id EQ TRUE\n                      | arr_call_id EQ FALSE\n\n                      | logics EQ TRUE\n                      | logics EQ FALSE\n                      | log_type EQ TRUE\n                      | log_type EQ FALSE\n\n                      | var_call_id EQ PASS\n                      | arr_call_id EQ PASS\n\n                      | literal EQ literal\n        comparison : error EQ INT\n                      | error EQ var_call_id\n                      | error EQ TRUE\n                      | error EQ FALSE\n                      | error EQ PASS\n\n                      | arithmetic EQ error\n                      | var_call_id EQ error\n                      | arr_call_id EQ error\n                      | logics EQ error\n                      | log_type EQ error\n\n                      | arithmetic EQ error conditionals\n                      | logics EQ error conditionals\n        cycle : LPAREN logics RPAREN LBRACE NL statement_block RBRACE\n                 | LPAREN log_type RPAREN LBRACE NL statement_block RBRACE\n        cycle : LPAREN error RPAREN LBRACE NL statement_block RBRACE\n                 | LPAREN logics RPAREN LBRACE NL error RBRACE\n                 | LPAREN log_type RPAREN LBRACE NL error RBRACE\n        conditionals : LBRACKET logics RBRACKET GOTO var_call_id\n                        | LBRACKET log_type RBRACKET GOTO var_call_id\n                        | LBRACKET logics RBRACKET var_call_id\n                        | LBRACKET log_type RBRACKET var_call_id\n                        | GOTO var_call_id\n                        | var_call_id\n        conditionals : LBRACKET error RBRACKET GOTO var_call_id\n                        | LBRACKET error RBRACKET var_call_id\n\n                        | LBRACKET logics RBRACKET GOTO error\n                        | LBRACKET logic_expr RBRACKET GOTO error\n                        | LBRACKET logics RBRACKET error\n                        | LBRACKET logic_expr RBRACKET error\n\n                        | GOTO error\n                        | error\n        pass : PASSidentification : call LINK var_call_id\n                          | call LINK_BREAK var_call_id\n        identification : error LINK var_call_id\n                          | error LINK_BREAK var_call_id\n\n                          | call LINK error\n                          | call LINK_BREAK error\n\n                          | identification error\n                          | literal LINK var_call_id\n                          | literal LINK_BREAK var_call_id\n        robot : FORWARD\n                 | BACK\n                 | RIGHT\n                 | LEFT\n                 | TP\n                 | ATTEMPTS\n                 | SLEFT\n                 | SRIGHT\n                 | SBACK\n                 | SFORWARD\n        empty : NL'
    
_lr_action_items = {'error':([0,2,3,4,5,14,16,17,24,32,33,47,58,59,60,62,66,67,68,69,70,71,72,73,74,75,76,77,78,79,85,90,91,92,98,105,106,107,124,126,134,135,140,145,148,157,158,163,165,167,168,169,170,171,172,188,191,201,202,207,208,212,218,225,232,234,235,236,237,244,245,246,247,248,],[4,59,-158,-9,-8,78,-20,81,94,110,113,-35,-158,-22,-7,119,-10,142,-11,-12,145,-13,148,-14,-15,-16,-17,-18,-145,-19,78,166,168,170,78,179,184,187,78,201,-141,-142,78,203,203,-146,-147,78,213,-139,-143,-140,-144,215,216,220,226,-9,232,-21,-23,201,240,243,-22,201,246,248,232,232,232,-9,232,-9,]),'LPAREN':([0,2,3,4,5,16,17,24,32,58,59,60,62,66,67,68,69,71,73,74,75,76,77,79,87,90,126,171,172,201,202,207,208,212,232,234,235,236,237,244,245,246,247,248,],[17,17,-158,-9,-8,-20,17,104,104,-158,-22,-7,104,-10,104,-11,-12,-13,-14,-15,-16,-17,-18,-19,104,104,17,104,104,-9,17,-21,-23,17,-22,17,17,17,17,17,17,-9,17,-9,]),'INCR':([0,2,3,4,5,16,17,24,32,58,59,60,62,66,67,68,69,71,73,74,75,76,77,79,90,126,171,172,201,202,207,208,212,232,234,235,236,237,244,245,246,247,248,],[22,22,-158,-9,-8,-20,22,22,22,-158,-22,-7,22,-10,22,-11,-12,-13,-14,-15,-16,-17,-18,-19,22,22,22,22,-9,22,-21,-23,22,-22,22,22,22,22,22,22,-9,22,-9,]),'DECR':([0,2,3,4,5,16,17,24,32,58,59,60,62,66,67,68,69,71,73,74,75,76,77,79,90,126,171,172,201,202,207,208,212,232,234,235,236,237,244,245,246,247,248,],[23,23,-158,-9,-8,-20,23,23,23,-158,-22,-7,23,-10,23,-11,-12,-13,-14,-15,-16,-17,-18,-19,23,23,23,23,-9,23,-21,-23,23,-22,23,23,23,23,23,23,-9,23,-9,]),'NOR':([0,2,3,4,5,16,17,24,32,58,59,60,62,66,67,68,69,71,73,74,75,76,77,79,90,126,171,172,201,202,207,208,212,232,234,235,236,237,244,245,246,247,248,],[24,24,-158,-9,-8,-20,24,24,24,-158,-22,-7,24,-10,24,-11,-12,-13,-14,-15,-16,-17,-18,-19,24,24,24,24,-9,24,-21,-23,24,-22,24,24,24,24,24,24,-9,24,-9,]),'LBRACKET':([0,2,3,4,5,16,17,48,55,56,57,58,59,60,66,68,69,71,73,74,75,76,77,79,126,145,148,201,202,207,208,212,232,234,235,236,237,244,245,246,247,248,],[32,32,-158,-9,-8,-20,32,114,115,116,117,-158,-22,-7,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,32,32,32,-9,32,-21,-23,32,-22,32,32,32,32,32,32,-9,32,-9,]),'GOTO':([0,2,3,4,5,16,17,58,59,60,66,68,69,71,73,74,75,76,77,79,126,145,148,188,189,190,191,201,202,207,208,212,232,234,235,236,237,244,245,246,247,248,],[33,33,-158,-9,-8,-20,33,-158,-22,-7,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,33,33,33,218,221,223,225,-9,33,-21,-23,33,-22,33,33,33,33,33,33,-9,33,-9,]),'PASS':([0,2,3,4,5,16,17,58,59,60,63,66,68,69,71,73,74,75,76,77,79,105,106,126,201,202,207,208,212,232,234,235,236,237,244,245,246,247,248,],[31,31,-158,-9,-8,-20,31,-158,-22,-7,133,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,178,183,31,-9,31,-21,-23,31,-22,31,31,31,31,31,31,-9,31,-9,]),'FORWARD':([0,2,3,4,5,16,17,24,32,58,59,60,62,66,67,68,69,71,73,74,75,76,77,79,90,126,171,172,201,202,207,208,212,232,234,235,236,237,244,245,246,247,248,],[34,34,-158,-9,-8,-20,34,34,34,-158,-22,-7,34,-10,34,-11,-12,-13,-14,-15,-16,-17,-18,-19,34,34,34,34,-9,34,-21,-23,34,-22,34,34,34,34,34,34,-9,34,-9,]),'BACK':([0,2,3,4,5,16,17,24,32,58,59,60,62,66,67,68,69,71,73,74,75,76,77,79,90,126,171,172,201,202,207,208,212,232,234,235,236,237,244,245,246,247,248,],[35,35,-158,-9,-8,-20,35,35,35,-158,-22,-7,35,-10,35,-11,-12,-13,-14,-15,-16,-17,-18,-19,35,35,35,35,-9,35,-21,-23,35,-22,35,35,35,35,35,35,-9,35,-9,]),'RIGHT':([0,2,3,4,5,16,17,24,32,58,59,60,62,66,67,68,69,71,73,74,75,76,77,79,90,126,171,172,201,202,207,208,212,232,234,235,236,237,244,245,246,247,248,],[36,36,-158,-9,-8,-20,36,36,36,-158,-22,-7,36,-10,36,-11,-12,-13,-14,-15,-16,-17,-18,-19,36,36,36,36,-9,36,-21,-23,36,-22,36,36,36,36,36,36,-9,36,-9,]),'LEFT':([0,2,3,4,5,16,17,24,32,58,59,60,62,66,67,68,69,71,73,74,75,76,77,79,90,126,171,172,201,202,207,208,212,232,234,235,236,237,244,245,246,247,248,],[37,37,-158,-9,-8,-20,37,37,37,-158,-22,-7,37,-10,37,-11,-12,-13,-14,-15,-16,-17,-18,-19,37,37,37,37,-9,37,-21,-23,37,-22,37,37,37,37,37,37,-9,37,-9,]),'TP':([0,2,3,4,5,16,17,24,32,58,59,60,62,66,67,68,69,71,73,74,75,76,77,79,90,126,171,172,201,202,207,208,212,232,234,235,236,237,244,245,246,247,248,],[38,38,-158,-9,-8,-20,38,38,38,-158,-22,-7,38,-10,38,-11,-12,-13,-14,-15,-16,-17,-18,-19,38,38,38,38,-9,38,-21,-23,38,-22,38,38,38,38,38,38,-9,38,-9,]),'ATTEMPTS':([0,2,3,4,5,16,17,24,32,58,59,60,62,66,67,68,69,71,73,74,75,76,77,79,90,126,171,172,201,202,207,208,212,232,234,235,236,237,244,245,246,247,248,],[39,39,-158,-9,-8,-20,39,39,39,-158,-22,-7,39,-10,39,-11,-12,-13,-14,-15,-16,-17,-18,-19,39,39,39,39,-9,39,-21,-23,39,-22,39,39,39,39,39,39,-9,39,-9,]),'SLEFT':([0,2,3,4,5,16,17,24,32,58,59,60,62,66,67,68,69,71,73,74,75,76,77,79,90,126,171,172,201,202,207,208,212,232,234,235,236,237,244,245,246,247,248,],[40,40,-158,-9,-8,-20,40,40,40,-158,-22,-7,40,-10,40,-11,-12,-13,-14,-15,-16,-17,-18,-19,40,40,40,40,-9,40,-21,-23,40,-22,40,40,40,40,40,40,-9,40,-9,]),'SRIGHT':([0,2,3,4,5,16,17,24,32,58,59,60,62,66,67,68,69,71,73,74,75,76,77,79,90,126,171,172,201,202,207,208,212,232,234,235,236,237,244,245,246,247,248,],[41,41,-158,-9,-8,-20,41,41,41,-158,-22,-7,41,-10,41,-11,-12,-13,-14,-15,-16,-17,-18,-19,41,41,41,41,-9,41,-21,-23,41,-22,41,41,41,41,41,41,-9,41,-9,]),'SBACK':([0,2,3,4,5,16,17,24,32,58,59,60,62,66,67,68,69,71,73,74,75,76,77,79,90,126,171,172,201,202,207,208,212,232,234,235,236,237,244,245,246,247,248,],[42,42,-158,-9,-8,-20,42,42,42,-158,-22,-7,42,-10,42,-11,-12,-13,-14,-15,-16,-17,-18,-19,42,42,42,42,-9,42,-21,-23,42,-22,42,42,42,42,42,42,-9,42,-9,]),'SFORWARD':([0,2,3,4,5,16,17,24,32,58,59,60,62,66,67,68,69,71,73,74,75,76,77,79,90,126,171,172,201,202,207,208,212,232,234,235,236,237,244,245,246,247,248,],[43,43,-158,-9,-8,-20,43,43,43,-158,-22,-7,43,-10,43,-11,-12,-13,-14,-15,-16,-17,-18,-19,43,43,43,43,-9,43,-21,-23,43,-22,43,43,43,43,43,43,-9,43,-9,]),'NL':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,22,23,25,26,28,29,31,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,52,53,54,58,59,60,66,68,69,71,73,74,75,76,77,78,79,81,82,85,93,94,95,96,97,98,99,100,101,112,113,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,174,175,176,177,178,179,180,181,182,183,184,185,186,187,201,202,203,204,205,206,207,208,209,210,211,212,214,215,216,217,219,220,222,224,226,227,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,],[3,58,-158,61,-8,66,68,69,71,73,74,75,76,77,79,-20,3,-46,-47,-74,-75,-32,-129,-77,-78,-138,-148,-149,-150,-151,-152,-153,-154,-155,-156,-157,-30,-49,-50,-35,-24,-25,-26,-27,-28,-29,-158,118,-7,-10,-11,-12,-13,-14,-15,-16,-17,-18,-145,-19,-48,71,77,-89,-83,-85,-79,-80,-81,-82,-37,-38,-128,-136,-64,-65,-68,-69,-70,-71,3,-33,-34,-107,-108,-109,-110,-111,-141,-142,-51,-52,-55,-56,-57,-58,-66,-91,-92,-112,-100,-101,-115,207,208,-31,-106,-33,-34,-146,-147,-53,-54,-59,-60,-61,-62,212,-67,-139,-143,-140,-144,-93,-94,-96,-97,-104,-113,-95,-98,-99,-105,-114,-102,-103,-116,-9,3,-137,-117,-129,-118,-21,-23,234,235,236,3,-84,-83,-83,-86,-126,-134,-127,-131,-135,-36,-39,-40,-41,-22,-72,3,3,3,3,-73,-124,-132,-125,-130,-133,3,3,-9,3,-9,-63,-121,-119,-122,-120,-123,]),'LABEL':([0,2,3,4,5,16,17,58,59,60,66,68,69,71,73,74,75,76,77,79,126,201,202,207,208,212,232,234,235,236,237,244,245,246,247,248,],[44,44,-158,-9,-8,-20,44,-158,-22,-7,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,44,-9,44,-21,-23,44,-22,44,44,44,44,44,44,-9,44,-9,]),'VAR_CALL':([0,2,3,4,5,16,17,24,32,33,47,58,59,60,62,63,64,65,66,67,68,69,70,71,73,74,75,76,77,79,88,89,90,91,92,105,114,115,116,117,126,145,148,171,172,188,189,190,192,193,194,195,196,197,198,199,200,201,202,207,208,212,218,221,223,227,228,232,234,235,236,237,244,245,246,247,248,],[47,47,-158,-9,-8,-20,47,47,47,47,-35,-158,-22,-7,47,47,47,47,-10,47,-11,-12,47,-13,-14,-15,-16,-17,-18,-19,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,-43,-44,-45,-37,-38,47,47,47,-9,47,-21,-23,47,47,47,47,-36,-42,-22,47,47,47,47,47,47,-9,47,-9,]),'ARR_CALL':([0,2,3,4,5,16,17,24,32,47,58,59,60,62,66,67,68,69,71,73,74,75,76,77,79,90,114,115,116,117,126,171,172,192,193,194,195,196,197,198,199,200,201,202,207,208,212,227,228,232,234,235,236,237,244,245,246,247,248,],[48,48,-158,-9,-8,-20,48,48,48,-35,-158,-22,-7,48,-10,48,-11,-12,-13,-14,-15,-16,-17,-18,-19,48,48,48,48,48,48,48,48,48,-43,-44,-45,-37,-38,48,48,48,-9,48,-21,-23,48,-36,-42,-22,48,48,48,48,48,48,-9,48,-9,]),'TRUE':([0,2,3,4,5,16,17,24,32,58,59,60,62,63,66,67,68,69,71,72,73,74,75,76,77,79,87,90,105,106,107,126,171,172,201,202,207,208,212,232,234,235,236,237,244,245,246,247,248,],[28,28,-158,-9,-8,-20,28,28,28,-158,-22,-7,127,131,-10,127,-11,-12,-13,146,-14,-15,-16,-17,-18,-19,155,127,176,181,185,28,28,28,-9,28,-21,-23,28,-22,28,28,28,28,28,28,-9,28,-9,]),'FALSE':([0,2,3,4,5,16,17,24,32,58,59,60,62,63,66,67,68,69,71,72,73,74,75,76,77,79,87,90,105,106,107,126,171,172,201,202,207,208,212,232,234,235,236,237,244,245,246,247,248,],[29,29,-158,-9,-8,-20,29,29,29,-158,-22,-7,128,132,-10,128,-11,-12,-13,147,-14,-15,-16,-17,-18,-19,156,128,177,182,186,29,29,29,-9,29,-21,-23,29,-22,29,29,29,29,29,29,-9,29,-9,]),'INT':([0,2,3,4,5,16,17,24,32,47,58,59,60,62,63,66,67,68,69,70,71,73,74,75,76,77,79,87,90,104,105,106,114,115,116,117,126,171,172,192,193,194,195,196,197,198,199,200,201,202,207,208,212,227,228,232,234,235,236,237,244,245,246,247,248,],[25,25,-158,-9,-8,-20,84,25,25,-35,-158,-22,-7,25,129,-10,25,-11,-12,143,-13,-14,-15,-16,-17,-18,-19,25,25,173,175,180,194,194,194,194,25,25,25,194,-43,-44,-45,-37,-38,194,194,194,-9,25,-21,-23,25,-36,-42,-22,25,25,25,25,25,25,-9,25,-9,]),'INT_VAR':([0,2,3,4,5,16,17,58,59,60,66,68,69,71,73,74,75,76,77,79,126,201,202,207,208,212,232,234,235,236,237,244,245,246,247,248,],[49,49,-158,-9,-8,-20,49,-158,-22,-7,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,49,-9,49,-21,-23,49,-22,49,49,49,49,49,49,-9,49,-9,]),'BOOL_VAR':([0,2,3,4,5,16,17,58,59,60,66,68,69,71,73,74,75,76,77,79,126,201,202,207,208,212,232,234,235,236,237,244,245,246,247,248,],[50,50,-158,-9,-8,-20,50,-158,-22,-7,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,50,-9,50,-21,-23,50,-22,50,50,50,50,50,50,-9,50,-9,]),'PROC_VAR':([0,2,3,4,5,16,17,58,59,60,66,68,69,71,73,74,75,76,77,79,126,201,202,207,208,212,232,234,235,236,237,244,245,246,247,248,],[53,53,-158,-9,-8,-20,53,-158,-22,-7,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,53,-9,53,-21,-23,53,-22,53,53,53,53,53,53,-9,53,-9,]),'INT_ARR':([0,2,3,4,5,16,17,58,59,60,66,68,69,71,73,74,75,76,77,79,126,201,202,207,208,212,232,234,235,236,237,244,245,246,247,248,],[55,55,-158,-9,-8,-20,55,-158,-22,-7,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,55,-9,55,-21,-23,55,-22,55,55,55,55,55,55,-9,55,-9,]),'BOOL_ARR':([0,2,3,4,5,16,17,58,59,60,66,68,69,71,73,74,75,76,77,79,126,201,202,207,208,212,232,234,235,236,237,244,245,246,247,248,],[56,56,-158,-9,-8,-20,56,-158,-22,-7,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,56,-9,56,-21,-23,56,-22,56,56,56,56,56,56,-9,56,-9,]),'PROC_ARR':([0,2,3,4,5,16,17,58,59,60,66,68,69,71,73,74,75,76,77,79,126,201,202,207,208,212,232,234,235,236,237,244,245,246,247,248,],[57,57,-158,-9,-8,-20,57,-158,-22,-7,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,57,-9,57,-21,-23,57,-22,57,57,57,57,57,57,-9,57,-9,]),'$end':([1,2,3,4,5,16,58,59,60,61,66,68,69,71,73,74,75,76,77,79,118,207,208,],[0,-2,-158,-4,-8,-20,-1,-5,-7,-3,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-6,-21,-23,]),'RPAREN':([3,10,15,16,25,26,27,28,29,34,35,36,37,38,39,40,41,42,43,47,66,68,69,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,93,94,95,96,97,98,99,100,101,112,113,129,130,131,132,133,134,135,143,144,145,146,147,148,153,154,155,156,157,158,167,168,169,170,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,203,204,205,206,207,208,214,215,216,217,219,220,222,224,226,227,239,240,241,242,243,],[-158,-80,-82,-20,-32,-38,-37,-77,-78,-148,-149,-150,-151,-152,-153,-154,-155,-156,-157,-35,-10,-11,-12,-13,-14,-15,-16,-17,-18,-145,-19,149,150,151,152,153,-81,-79,-89,-83,-85,-79,-80,-81,-82,-37,-38,-128,-136,-107,-108,-109,-110,-111,-141,-142,-91,-92,-112,-100,-101,-115,-31,-106,-33,-34,-146,-147,-139,-143,-140,-144,153,-93,-94,-96,-97,-104,-113,-95,-98,-99,-105,-114,-102,-103,-116,-137,-117,-129,-118,-21,-23,-84,-83,-83,-86,-126,-134,-127,-131,-135,-36,-124,-132,-125,-130,-133,]),'RBRACE':([3,5,16,60,66,68,69,71,73,74,75,76,77,79,201,202,207,208,213,232,237,244,245,246,247,248,],[-158,-8,-20,-7,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-9,233,-21,-23,238,-22,249,250,251,252,253,254,]),'ASSIGN':([4,6,18,19,21,26,27,44,45,46,47,49,50,51,52,53,54,59,81,86,201,227,229,230,231,232,246,248,],[62,67,-46,-47,90,-38,-37,-30,-49,-50,-35,-24,-25,-26,-27,-28,-29,62,62,90,62,-36,-39,-40,-41,62,62,62,]),'EQ':([4,8,9,10,14,15,20,21,22,23,25,26,27,28,29,30,34,35,36,37,38,39,40,41,42,43,47,59,78,81,82,83,84,85,86,93,94,95,96,97,98,99,100,101,102,103,108,109,110,112,113,119,120,121,122,123,124,125,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,153,154,155,156,157,158,159,160,161,162,163,164,166,167,168,169,170,174,175,176,177,178,179,180,181,182,183,184,185,186,187,201,203,204,205,206,214,215,216,217,219,220,222,224,226,227,232,239,240,241,242,243,246,248,],[63,70,72,-80,-81,-82,87,-79,-74,-75,-32,105,106,-33,-34,107,-148,-149,-150,-151,-152,-153,-154,-155,-156,-157,-35,63,-145,63,72,107,-32,-81,-79,-89,63,107,-79,-80,-81,-82,106,105,70,72,72,107,63,-128,-136,63,-79,87,72,-80,-81,-82,-33,-34,-107,-108,-109,-110,-111,-141,-142,87,-79,72,-80,-81,-82,63,-91,-92,-112,-100,-101,-115,-31,-106,-33,-34,-146,-147,-79,87,72,-80,-81,-82,63,-139,-143,-140,-144,-93,-94,-96,-97,-104,-113,-95,-98,-99,-105,-114,-102,-103,-116,63,-137,-117,-129,-118,107,63,63,107,-126,-134,-127,-131,-135,-36,63,-124,-132,-125,-130,-133,63,63,]),'LINK':([4,20,21,25,26,27,28,29,47,59,81,84,86,94,96,100,101,110,119,120,121,127,128,136,137,142,153,159,160,166,201,215,216,227,232,246,248,],[64,88,91,-32,-38,-37,-33,-34,-35,64,64,-32,91,64,91,-37,-38,64,64,91,88,-33,-34,88,91,64,-31,91,88,64,64,64,64,-36,64,64,64,]),'LINK_BREAK':([4,20,21,25,26,27,28,29,47,59,81,84,86,94,96,100,101,110,119,120,121,127,128,136,137,142,153,159,160,166,201,215,216,227,232,246,248,],[65,89,92,-32,-38,-37,-33,-34,-35,65,65,-32,92,65,92,-37,-38,65,65,92,89,-33,-34,89,92,65,-31,92,89,65,65,65,65,-36,65,65,65,]),'DASH':([25,28,29,34,35,36,37,38,39,40,41,42,43,47,78,93,94,95,96,97,98,99,100,101,109,110,111,112,113,129,130,131,132,133,134,135,143,144,145,146,147,148,153,154,155,156,157,158,167,168,169,170,174,175,176,177,178,179,180,181,182,183,184,185,186,187,203,204,205,206,214,215,216,217,219,220,222,224,226,227,239,240,241,242,243,],[-32,-77,-78,-148,-149,-150,-151,-152,-153,-154,-155,-156,-157,-35,-145,171,172,-85,-79,-80,-81,-82,-37,-38,-85,172,171,-128,-136,-107,-108,-109,-110,-111,-141,-142,-91,-92,-112,-100,-101,-115,-31,-106,-33,-34,-146,-147,-139,-143,-140,-144,-93,-94,-96,-97,-104,-113,-95,-98,-99,-105,-114,-102,-103,-116,-137,-117,-129,-118,-84,-83,-83,-86,-126,-134,-127,-131,-135,-36,-124,-132,-125,-130,-133,]),'RBRACKET':([25,28,29,34,35,36,37,38,39,40,41,42,43,47,78,93,94,95,96,97,98,99,100,101,108,109,110,111,112,113,129,130,131,132,133,134,135,143,144,145,146,147,148,153,154,155,156,157,158,167,168,169,170,174,175,176,177,178,179,180,181,182,183,184,185,186,187,192,193,194,195,196,197,198,199,200,203,204,205,206,214,215,216,217,219,220,222,224,226,227,228,239,240,241,242,243,],[-32,-77,-78,-148,-149,-150,-151,-152,-153,-154,-155,-156,-157,-35,-145,-89,-83,-85,-79,-80,-81,-82,-37,-38,188,189,190,191,-128,-136,-107,-108,-109,-110,-111,-141,-142,-91,-92,-112,-100,-101,-115,-31,-106,-33,-34,-146,-147,-139,-143,-140,-144,-93,-94,-96,-97,-104,-113,-95,-98,-99,-105,-114,-102,-103,-116,227,-43,-44,-45,-37,-38,229,230,231,-137,-117,-129,-118,-84,-83,-83,-86,-126,-134,-127,-131,-135,-36,-42,-124,-132,-125,-130,-133,]),'LBRACE':([62,90,150,151,152,],[126,165,209,210,211,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_block':([0,126,212,234,235,236,],[2,202,237,244,245,247,]),'statement':([0,2,17,126,202,212,234,235,236,237,244,245,247,],[5,60,80,5,60,5,5,5,5,60,60,60,60,]),'declaration':([0,2,17,126,202,212,234,235,236,237,244,245,247,],[6,6,6,6,6,6,6,6,6,6,6,6,6,]),'assignment':([0,2,17,126,202,212,234,235,236,237,244,245,247,],[7,7,7,7,7,7,7,7,7,7,7,7,7,]),'arithmetic':([0,2,17,24,32,62,67,90,126,171,172,202,212,234,235,236,237,244,245,247,],[8,8,8,102,102,102,102,102,8,102,102,8,8,8,8,8,8,8,8,8,]),'logics':([0,2,17,24,32,62,67,90,126,171,172,202,212,234,235,236,237,244,245,247,],[9,9,82,103,108,122,138,161,9,103,103,9,9,9,9,9,9,9,9,9,]),'comparison':([0,2,17,24,32,62,67,90,126,171,172,202,212,234,235,236,237,244,245,247,],[10,10,10,97,97,123,139,162,10,97,97,10,10,10,10,10,10,10,10,10,]),'cycle':([0,2,17,126,202,212,234,235,236,237,244,245,247,],[11,11,11,11,11,11,11,11,11,11,11,11,11,]),'conditionals':([0,2,17,126,145,148,202,212,234,235,236,237,244,245,247,],[12,12,12,12,204,206,12,12,12,12,12,12,12,12,12,]),'pass':([0,2,17,126,202,212,234,235,236,237,244,245,247,],[13,13,13,13,13,13,13,13,13,13,13,13,13,]),'identification':([0,2,17,24,32,62,67,90,126,171,172,202,212,234,235,236,237,244,245,247,],[14,14,85,98,98,124,140,163,14,98,98,14,14,14,14,14,14,14,14,14,]),'robot':([0,2,17,24,32,62,67,90,126,171,172,202,212,234,235,236,237,244,245,247,],[15,15,15,99,99,125,141,164,15,99,99,15,15,15,15,15,15,15,15,15,]),'empty':([0,2,17,126,202,212,234,235,236,237,244,245,247,],[16,16,16,16,16,16,16,16,16,16,16,16,16,]),'label':([0,2,17,126,202,212,234,235,236,237,244,245,247,],[18,18,18,18,18,18,18,18,18,18,18,18,18,]),'declaration_set':([0,2,17,126,202,212,234,235,236,237,244,245,247,],[19,19,19,19,19,19,19,19,19,19,19,19,19,]),'literal':([0,2,17,24,32,62,67,87,90,126,171,172,202,212,234,235,236,237,244,245,247,],[20,20,20,20,20,121,136,154,160,20,20,20,20,20,20,20,20,20,20,20,20,]),'call':([0,2,17,24,32,62,67,90,114,115,116,117,126,171,172,192,198,199,200,202,212,234,235,236,237,244,245,247,],[21,21,86,96,96,120,137,159,195,195,195,195,21,96,96,195,195,195,195,21,21,21,21,21,21,21,21,21,]),'var_call_id':([0,2,17,24,32,33,62,63,64,65,67,70,88,89,90,91,92,105,114,115,116,117,126,145,148,171,172,188,189,190,192,198,199,200,202,212,218,221,223,234,235,236,237,244,245,247,],[26,26,26,101,101,112,101,130,134,135,101,144,157,158,101,167,169,174,197,197,197,197,26,205,205,101,101,219,222,224,197,197,197,197,26,26,239,241,242,26,26,26,26,26,26,26,]),'arr_call_id':([0,2,17,24,32,62,67,90,114,115,116,117,126,171,172,192,198,199,200,202,212,234,235,236,237,244,245,247,],[27,27,27,100,100,100,100,100,196,196,196,196,27,100,100,196,196,196,196,27,27,27,27,27,27,27,27,27,]),'log_type':([0,2,17,24,32,62,67,90,126,171,172,202,212,234,235,236,237,244,245,247,],[30,30,83,95,109,30,30,30,30,214,217,30,30,30,30,30,30,30,30,30,]),'variable':([0,2,17,126,202,212,234,235,236,237,244,245,247,],[45,45,45,45,45,45,45,45,45,45,45,45,45,]),'procedure':([0,2,17,126,202,212,234,235,236,237,244,245,247,],[46,46,46,46,46,46,46,46,46,46,46,46,46,]),'int_arr_var':([0,2,17,126,202,212,234,235,236,237,244,245,247,],[51,51,51,51,51,51,51,51,51,51,51,51,51,]),'bool_arr_var':([0,2,17,126,202,212,234,235,236,237,244,245,247,],[52,52,52,52,52,52,52,52,52,52,52,52,52,]),'proc_arr_var':([0,2,17,126,202,212,234,235,236,237,244,245,247,],[54,54,54,54,54,54,54,54,54,54,54,54,54,]),'logic_expr':([24,32,],[93,111,]),'id_list':([114,115,116,117,],[192,198,199,200,]),'id':([114,115,116,117,192,198,199,200,],[193,193,193,193,228,228,228,228,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_block NL','program',2,'p_program','Parser.py',31),
  ('program -> statement_block','program',1,'p_program','Parser.py',32),
  ('program -> error NL','program',2,'p_program_error','Parser.py',37),
  ('program -> error','program',1,'p_program_error','Parser.py',38),
  ('program -> statement_block error','program',2,'p_program_error','Parser.py',39),
  ('program -> statement_block error NL','program',3,'p_program_error','Parser.py',40),
  ('statement_block -> statement_block statement','statement_block',2,'p_statement_block','Parser.py',47),
  ('statement_block -> statement','statement_block',1,'p_statement_block','Parser.py',48),
  ('statement_block -> error','statement_block',1,'p_statement_block_error','Parser.py',56),
  ('statement -> declaration NL','statement',2,'p_statement','Parser.py',63),
  ('statement -> assignment NL','statement',2,'p_statement','Parser.py',64),
  ('statement -> arithmetic NL','statement',2,'p_statement','Parser.py',65),
  ('statement -> logics NL','statement',2,'p_statement','Parser.py',66),
  ('statement -> comparison NL','statement',2,'p_statement','Parser.py',67),
  ('statement -> cycle NL','statement',2,'p_statement','Parser.py',68),
  ('statement -> conditionals NL','statement',2,'p_statement','Parser.py',69),
  ('statement -> pass NL','statement',2,'p_statement','Parser.py',70),
  ('statement -> identification NL','statement',2,'p_statement','Parser.py',71),
  ('statement -> robot NL','statement',2,'p_statement','Parser.py',72),
  ('statement -> empty','statement',1,'p_statement','Parser.py',73),
  ('statement -> LPAREN statement RPAREN NL','statement',4,'p_statement','Parser.py',74),
  ('statement -> error','statement',1,'p_statement_error','Parser.py',82),
  ('statement -> LPAREN error RPAREN NL','statement',4,'p_statement_error','Parser.py',83),
  ('variable -> INT_VAR','variable',1,'p_variable_int','Parser.py',96),
  ('variable -> BOOL_VAR','variable',1,'p_variable_bool','Parser.py',100),
  ('variable -> int_arr_var','variable',1,'p_variable','Parser.py',104),
  ('variable -> bool_arr_var','variable',1,'p_variable','Parser.py',105),
  ('procedure -> PROC_VAR','procedure',1,'p_procedure_simple','Parser.py',110),
  ('procedure -> proc_arr_var','procedure',1,'p_procedure','Parser.py',116),
  ('label -> LABEL','label',1,'p_label','Parser.py',126),
  ('literal -> LPAREN INT RPAREN','literal',3,'p_literal','Parser.py',132),
  ('literal -> INT','literal',1,'p_literal','Parser.py',133),
  ('literal -> TRUE','literal',1,'p_literal','Parser.py',134),
  ('literal -> FALSE','literal',1,'p_literal','Parser.py',135),
  ('var_call_id -> VAR_CALL','var_call_id',1,'p_var_call_id','Parser.py',143),
  ('arr_call_id -> ARR_CALL LBRACKET id_list RBRACKET','arr_call_id',4,'p_arr_call_id','Parser.py',148),
  ('call -> arr_call_id','call',1,'p_call','Parser.py',152),
  ('call -> var_call_id','call',1,'p_call','Parser.py',153),
  ('int_arr_var -> INT_ARR LBRACKET id_list RBRACKET','int_arr_var',4,'p_int_arr_var','Parser.py',159),
  ('bool_arr_var -> BOOL_ARR LBRACKET id_list RBRACKET','bool_arr_var',4,'p_bool_arr_var','Parser.py',163),
  ('proc_arr_var -> PROC_ARR LBRACKET id_list RBRACKET','proc_arr_var',4,'p_proc_arr_var','Parser.py',167),
  ('id_list -> id_list id','id_list',2,'p_id_list','Parser.py',171),
  ('id_list -> id','id_list',1,'p_id_list','Parser.py',172),
  ('id -> INT','id',1,'p_id_simple','Parser.py',181),
  ('id -> call','id',1,'p_id','Parser.py',185),
  ('declaration -> label','declaration',1,'p_declaration','Parser.py',191),
  ('declaration -> declaration_set','declaration',1,'p_declaration','Parser.py',192),
  ('declaration -> error','declaration',1,'p_declaration_error','Parser.py',197),
  ('declaration_set -> variable','declaration_set',1,'p_declaration_set','Parser.py',203),
  ('declaration_set -> procedure','declaration_set',1,'p_declaration_set','Parser.py',204),
  ('assignment -> declaration ASSIGN literal','assignment',3,'p_assignment','Parser.py',212),
  ('assignment -> declaration ASSIGN call','assignment',3,'p_assignment','Parser.py',213),
  ('assignment -> call ASSIGN call','assignment',3,'p_assignment','Parser.py',215),
  ('assignment -> call ASSIGN literal','assignment',3,'p_assignment','Parser.py',216),
  ('assignment -> declaration ASSIGN logics','assignment',3,'p_assignment','Parser.py',218),
  ('assignment -> declaration ASSIGN comparison','assignment',3,'p_assignment','Parser.py',219),
  ('assignment -> declaration ASSIGN identification','assignment',3,'p_assignment','Parser.py',220),
  ('assignment -> declaration ASSIGN robot','assignment',3,'p_assignment','Parser.py',221),
  ('assignment -> call ASSIGN logics','assignment',3,'p_assignment','Parser.py',223),
  ('assignment -> call ASSIGN comparison','assignment',3,'p_assignment','Parser.py',224),
  ('assignment -> call ASSIGN identification','assignment',3,'p_assignment','Parser.py',225),
  ('assignment -> call ASSIGN robot','assignment',3,'p_assignment','Parser.py',226),
  ('assignment -> call ASSIGN LBRACE NL statement_block RBRACE','assignment',6,'p_assignment','Parser.py',228),
  ('assignment -> error ASSIGN call','assignment',3,'p_assignment_error','Parser.py',236),
  ('assignment -> error ASSIGN literal','assignment',3,'p_assignment_error','Parser.py',237),
  ('assignment -> declaration ASSIGN error','assignment',3,'p_assignment_error','Parser.py',238),
  ('assignment -> call ASSIGN error','assignment',3,'p_assignment_error','Parser.py',240),
  ('assignment -> error ASSIGN logics','assignment',3,'p_assignment_error','Parser.py',242),
  ('assignment -> error ASSIGN comparison','assignment',3,'p_assignment_error','Parser.py',243),
  ('assignment -> error ASSIGN identification','assignment',3,'p_assignment_error','Parser.py',244),
  ('assignment -> error ASSIGN robot','assignment',3,'p_assignment_error','Parser.py',245),
  ('assignment -> error ASSIGN LBRACE statement_block RBRACE','assignment',5,'p_assignment_error','Parser.py',247),
  ('assignment -> call ASSIGN LBRACE error RBRACE','assignment',5,'p_assignment_error','Parser.py',248),
  ('arithmetic -> INCR','arithmetic',1,'p_arithmetic','Parser.py',260),
  ('arithmetic -> DECR','arithmetic',1,'p_arithmetic','Parser.py',261),
  ('arithmetic -> error','arithmetic',1,'p_arithmetic_error','Parser.py',269),
  ('log_type -> TRUE','log_type',1,'p_log_type','Parser.py',277),
  ('log_type -> FALSE','log_type',1,'p_log_type','Parser.py',278),
  ('log_type -> call','log_type',1,'p_log_type','Parser.py',279),
  ('log_type -> comparison','log_type',1,'p_log_type','Parser.py',280),
  ('log_type -> identification','log_type',1,'p_log_type','Parser.py',281),
  ('log_type -> robot','log_type',1,'p_log_type','Parser.py',282),
  ('log_type -> error','log_type',1,'p_log_type_error','Parser.py',291),
  ('logic_expr -> logic_expr DASH log_type','logic_expr',3,'p_logic_expr','Parser.py',297),
  ('logic_expr -> log_type','logic_expr',1,'p_logic_expr','Parser.py',298),
  ('logic_expr -> error DASH log_type','logic_expr',3,'p_logic_expr_error','Parser.py',306),
  ('logic_expr -> logic_expr DASH error','logic_expr',3,'p_logic_expr_error','Parser.py',307),
  ('logic_expr -> error','logic_expr',1,'p_logic_expr_error','Parser.py',308),
  ('logics -> NOR logic_expr','logics',2,'p_logics','Parser.py',318),
  ('logics -> NOR error','logics',2,'p_logics_error','Parser.py',323),
  ('comparison -> arithmetic EQ INT','comparison',3,'p_comparison','Parser.py',331),
  ('comparison -> arithmetic EQ var_call_id','comparison',3,'p_comparison','Parser.py',332),
  ('comparison -> var_call_id EQ var_call_id','comparison',3,'p_comparison','Parser.py',334),
  ('comparison -> var_call_id EQ INT','comparison',3,'p_comparison','Parser.py',335),
  ('comparison -> arr_call_id EQ INT','comparison',3,'p_comparison','Parser.py',336),
  ('comparison -> var_call_id EQ TRUE','comparison',3,'p_comparison','Parser.py',338),
  ('comparison -> var_call_id EQ FALSE','comparison',3,'p_comparison','Parser.py',339),
  ('comparison -> arr_call_id EQ TRUE','comparison',3,'p_comparison','Parser.py',340),
  ('comparison -> arr_call_id EQ FALSE','comparison',3,'p_comparison','Parser.py',341),
  ('comparison -> logics EQ TRUE','comparison',3,'p_comparison','Parser.py',343),
  ('comparison -> logics EQ FALSE','comparison',3,'p_comparison','Parser.py',344),
  ('comparison -> log_type EQ TRUE','comparison',3,'p_comparison','Parser.py',345),
  ('comparison -> log_type EQ FALSE','comparison',3,'p_comparison','Parser.py',346),
  ('comparison -> var_call_id EQ PASS','comparison',3,'p_comparison','Parser.py',348),
  ('comparison -> arr_call_id EQ PASS','comparison',3,'p_comparison','Parser.py',349),
  ('comparison -> literal EQ literal','comparison',3,'p_comparison','Parser.py',351),
  ('comparison -> error EQ INT','comparison',3,'p_comparison_error','Parser.py',356),
  ('comparison -> error EQ var_call_id','comparison',3,'p_comparison_error','Parser.py',357),
  ('comparison -> error EQ TRUE','comparison',3,'p_comparison_error','Parser.py',358),
  ('comparison -> error EQ FALSE','comparison',3,'p_comparison_error','Parser.py',359),
  ('comparison -> error EQ PASS','comparison',3,'p_comparison_error','Parser.py',360),
  ('comparison -> arithmetic EQ error','comparison',3,'p_comparison_error','Parser.py',362),
  ('comparison -> var_call_id EQ error','comparison',3,'p_comparison_error','Parser.py',363),
  ('comparison -> arr_call_id EQ error','comparison',3,'p_comparison_error','Parser.py',364),
  ('comparison -> logics EQ error','comparison',3,'p_comparison_error','Parser.py',365),
  ('comparison -> log_type EQ error','comparison',3,'p_comparison_error','Parser.py',366),
  ('comparison -> arithmetic EQ error conditionals','comparison',4,'p_comparison_error','Parser.py',368),
  ('comparison -> logics EQ error conditionals','comparison',4,'p_comparison_error','Parser.py',369),
  ('cycle -> LPAREN logics RPAREN LBRACE NL statement_block RBRACE','cycle',7,'p_cycle','Parser.py',377),
  ('cycle -> LPAREN log_type RPAREN LBRACE NL statement_block RBRACE','cycle',7,'p_cycle','Parser.py',378),
  ('cycle -> LPAREN error RPAREN LBRACE NL statement_block RBRACE','cycle',7,'p_cycle_error','Parser.py',383),
  ('cycle -> LPAREN logics RPAREN LBRACE NL error RBRACE','cycle',7,'p_cycle_error','Parser.py',384),
  ('cycle -> LPAREN log_type RPAREN LBRACE NL error RBRACE','cycle',7,'p_cycle_error','Parser.py',385),
  ('conditionals -> LBRACKET logics RBRACKET GOTO var_call_id','conditionals',5,'p_conditionals','Parser.py',394),
  ('conditionals -> LBRACKET log_type RBRACKET GOTO var_call_id','conditionals',5,'p_conditionals','Parser.py',395),
  ('conditionals -> LBRACKET logics RBRACKET var_call_id','conditionals',4,'p_conditionals','Parser.py',396),
  ('conditionals -> LBRACKET log_type RBRACKET var_call_id','conditionals',4,'p_conditionals','Parser.py',397),
  ('conditionals -> GOTO var_call_id','conditionals',2,'p_conditionals','Parser.py',398),
  ('conditionals -> var_call_id','conditionals',1,'p_conditionals','Parser.py',399),
  ('conditionals -> LBRACKET error RBRACKET GOTO var_call_id','conditionals',5,'p_conditionals_error','Parser.py',416),
  ('conditionals -> LBRACKET error RBRACKET var_call_id','conditionals',4,'p_conditionals_error','Parser.py',417),
  ('conditionals -> LBRACKET logics RBRACKET GOTO error','conditionals',5,'p_conditionals_error','Parser.py',419),
  ('conditionals -> LBRACKET logic_expr RBRACKET GOTO error','conditionals',5,'p_conditionals_error','Parser.py',420),
  ('conditionals -> LBRACKET logics RBRACKET error','conditionals',4,'p_conditionals_error','Parser.py',421),
  ('conditionals -> LBRACKET logic_expr RBRACKET error','conditionals',4,'p_conditionals_error','Parser.py',422),
  ('conditionals -> GOTO error','conditionals',2,'p_conditionals_error','Parser.py',424),
  ('conditionals -> error','conditionals',1,'p_conditionals_error','Parser.py',425),
  ('pass -> PASS','pass',1,'p_pass','Parser.py',440),
  ('identification -> call LINK var_call_id','identification',3,'p_identification','Parser.py',446),
  ('identification -> call LINK_BREAK var_call_id','identification',3,'p_identification','Parser.py',447),
  ('identification -> error LINK var_call_id','identification',3,'p_identification_error','Parser.py',452),
  ('identification -> error LINK_BREAK var_call_id','identification',3,'p_identification_error','Parser.py',453),
  ('identification -> call LINK error','identification',3,'p_identification_error','Parser.py',455),
  ('identification -> call LINK_BREAK error','identification',3,'p_identification_error','Parser.py',456),
  ('identification -> identification error','identification',2,'p_identification_error','Parser.py',458),
  ('identification -> literal LINK var_call_id','identification',3,'p_identification_error','Parser.py',459),
  ('identification -> literal LINK_BREAK var_call_id','identification',3,'p_identification_error','Parser.py',460),
  ('robot -> FORWARD','robot',1,'p_robot','Parser.py',472),
  ('robot -> BACK','robot',1,'p_robot','Parser.py',473),
  ('robot -> RIGHT','robot',1,'p_robot','Parser.py',474),
  ('robot -> LEFT','robot',1,'p_robot','Parser.py',475),
  ('robot -> TP','robot',1,'p_robot','Parser.py',476),
  ('robot -> ATTEMPTS','robot',1,'p_robot','Parser.py',477),
  ('robot -> SLEFT','robot',1,'p_robot','Parser.py',478),
  ('robot -> SRIGHT','robot',1,'p_robot','Parser.py',479),
  ('robot -> SBACK','robot',1,'p_robot','Parser.py',480),
  ('robot -> SFORWARD','robot',1,'p_robot','Parser.py',481),
  ('empty -> NL','empty',1,'p_empty','Parser.py',486),
]
